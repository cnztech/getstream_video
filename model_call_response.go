/*
Stream API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v100.14.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getstream_video

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the CallResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallResponse{}

// CallResponse Represents a call
type CallResponse struct {
	Backstage bool `json:"backstage"`
	BlockedUserIds []string `json:"blocked_user_ids"`
	// The unique identifier for a call (<type>:<id>)
	Cid string `json:"cid"`
	// Date/time of creation
	CreatedAt time.Time `json:"created_at"`
	CreatedBy UserResponse `json:"created_by"`
	CurrentSessionId string `json:"current_session_id"`
	// Custom data for this object
	Custom map[string]interface{} `json:"custom"`
	Egress EgressResponse `json:"egress"`
	// Date/time when the call ended
	EndedAt *time.Time `json:"ended_at,omitempty"`
	// Call ID
	Id string `json:"id"`
	Ingress CallIngressResponse `json:"ingress"`
	Recording bool `json:"recording"`
	Session *CallSessionResponse `json:"session,omitempty"`
	Settings CallSettingsResponse `json:"settings"`
	// Date/time when the call will start
	StartsAt *time.Time `json:"starts_at,omitempty"`
	Team *string `json:"team,omitempty"`
	Thumbnails *ThumbnailResponse `json:"thumbnails,omitempty"`
	Transcribing bool `json:"transcribing"`
	// The type of call
	Type string `json:"type"`
	// Date/time of the last update
	UpdatedAt time.Time `json:"updated_at"`
	AdditionalProperties map[string]interface{}
}

type _CallResponse CallResponse

// NewCallResponse instantiates a new CallResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallResponse(backstage bool, blockedUserIds []string, cid string, createdAt time.Time, createdBy UserResponse, currentSessionId string, custom map[string]interface{}, egress EgressResponse, id string, ingress CallIngressResponse, recording bool, settings CallSettingsResponse, transcribing bool, type_ string, updatedAt time.Time) *CallResponse {
	this := CallResponse{}
	this.Backstage = backstage
	this.BlockedUserIds = blockedUserIds
	this.Cid = cid
	this.CreatedAt = createdAt
	this.CreatedBy = createdBy
	this.CurrentSessionId = currentSessionId
	this.Custom = custom
	this.Egress = egress
	this.Id = id
	this.Ingress = ingress
	this.Recording = recording
	this.Settings = settings
	this.Transcribing = transcribing
	this.Type = type_
	this.UpdatedAt = updatedAt
	return &this
}

// NewCallResponseWithDefaults instantiates a new CallResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallResponseWithDefaults() *CallResponse {
	this := CallResponse{}
	return &this
}

// GetBackstage returns the Backstage field value
func (o *CallResponse) GetBackstage() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Backstage
}

// GetBackstageOk returns a tuple with the Backstage field value
// and a boolean to check if the value has been set.
func (o *CallResponse) GetBackstageOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Backstage, true
}

// SetBackstage sets field value
func (o *CallResponse) SetBackstage(v bool) {
	o.Backstage = v
}

// GetBlockedUserIds returns the BlockedUserIds field value
func (o *CallResponse) GetBlockedUserIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.BlockedUserIds
}

// GetBlockedUserIdsOk returns a tuple with the BlockedUserIds field value
// and a boolean to check if the value has been set.
func (o *CallResponse) GetBlockedUserIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BlockedUserIds, true
}

// SetBlockedUserIds sets field value
func (o *CallResponse) SetBlockedUserIds(v []string) {
	o.BlockedUserIds = v
}

// GetCid returns the Cid field value
func (o *CallResponse) GetCid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cid
}

// GetCidOk returns a tuple with the Cid field value
// and a boolean to check if the value has been set.
func (o *CallResponse) GetCidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cid, true
}

// SetCid sets field value
func (o *CallResponse) SetCid(v string) {
	o.Cid = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CallResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CallResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CallResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value
func (o *CallResponse) GetCreatedBy() UserResponse {
	if o == nil {
		var ret UserResponse
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *CallResponse) GetCreatedByOk() (*UserResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *CallResponse) SetCreatedBy(v UserResponse) {
	o.CreatedBy = v
}

// GetCurrentSessionId returns the CurrentSessionId field value
func (o *CallResponse) GetCurrentSessionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrentSessionId
}

// GetCurrentSessionIdOk returns a tuple with the CurrentSessionId field value
// and a boolean to check if the value has been set.
func (o *CallResponse) GetCurrentSessionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentSessionId, true
}

// SetCurrentSessionId sets field value
func (o *CallResponse) SetCurrentSessionId(v string) {
	o.CurrentSessionId = v
}

// GetCustom returns the Custom field value
func (o *CallResponse) GetCustom() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Custom
}

// GetCustomOk returns a tuple with the Custom field value
// and a boolean to check if the value has been set.
func (o *CallResponse) GetCustomOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Custom, true
}

// SetCustom sets field value
func (o *CallResponse) SetCustom(v map[string]interface{}) {
	o.Custom = v
}

// GetEgress returns the Egress field value
func (o *CallResponse) GetEgress() EgressResponse {
	if o == nil {
		var ret EgressResponse
		return ret
	}

	return o.Egress
}

// GetEgressOk returns a tuple with the Egress field value
// and a boolean to check if the value has been set.
func (o *CallResponse) GetEgressOk() (*EgressResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Egress, true
}

// SetEgress sets field value
func (o *CallResponse) SetEgress(v EgressResponse) {
	o.Egress = v
}

// GetEndedAt returns the EndedAt field value if set, zero value otherwise.
func (o *CallResponse) GetEndedAt() time.Time {
	if o == nil || IsNil(o.EndedAt) {
		var ret time.Time
		return ret
	}
	return *o.EndedAt
}

// GetEndedAtOk returns a tuple with the EndedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallResponse) GetEndedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndedAt) {
		return nil, false
	}
	return o.EndedAt, true
}

// HasEndedAt returns a boolean if a field has been set.
func (o *CallResponse) HasEndedAt() bool {
	if o != nil && !IsNil(o.EndedAt) {
		return true
	}

	return false
}

// SetEndedAt gets a reference to the given time.Time and assigns it to the EndedAt field.
func (o *CallResponse) SetEndedAt(v time.Time) {
	o.EndedAt = &v
}

// GetId returns the Id field value
func (o *CallResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CallResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CallResponse) SetId(v string) {
	o.Id = v
}

// GetIngress returns the Ingress field value
func (o *CallResponse) GetIngress() CallIngressResponse {
	if o == nil {
		var ret CallIngressResponse
		return ret
	}

	return o.Ingress
}

// GetIngressOk returns a tuple with the Ingress field value
// and a boolean to check if the value has been set.
func (o *CallResponse) GetIngressOk() (*CallIngressResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ingress, true
}

// SetIngress sets field value
func (o *CallResponse) SetIngress(v CallIngressResponse) {
	o.Ingress = v
}

// GetRecording returns the Recording field value
func (o *CallResponse) GetRecording() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Recording
}

// GetRecordingOk returns a tuple with the Recording field value
// and a boolean to check if the value has been set.
func (o *CallResponse) GetRecordingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Recording, true
}

// SetRecording sets field value
func (o *CallResponse) SetRecording(v bool) {
	o.Recording = v
}

// GetSession returns the Session field value if set, zero value otherwise.
func (o *CallResponse) GetSession() CallSessionResponse {
	if o == nil || IsNil(o.Session) {
		var ret CallSessionResponse
		return ret
	}
	return *o.Session
}

// GetSessionOk returns a tuple with the Session field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallResponse) GetSessionOk() (*CallSessionResponse, bool) {
	if o == nil || IsNil(o.Session) {
		return nil, false
	}
	return o.Session, true
}

// HasSession returns a boolean if a field has been set.
func (o *CallResponse) HasSession() bool {
	if o != nil && !IsNil(o.Session) {
		return true
	}

	return false
}

// SetSession gets a reference to the given CallSessionResponse and assigns it to the Session field.
func (o *CallResponse) SetSession(v CallSessionResponse) {
	o.Session = &v
}

// GetSettings returns the Settings field value
func (o *CallResponse) GetSettings() CallSettingsResponse {
	if o == nil {
		var ret CallSettingsResponse
		return ret
	}

	return o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value
// and a boolean to check if the value has been set.
func (o *CallResponse) GetSettingsOk() (*CallSettingsResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Settings, true
}

// SetSettings sets field value
func (o *CallResponse) SetSettings(v CallSettingsResponse) {
	o.Settings = v
}

// GetStartsAt returns the StartsAt field value if set, zero value otherwise.
func (o *CallResponse) GetStartsAt() time.Time {
	if o == nil || IsNil(o.StartsAt) {
		var ret time.Time
		return ret
	}
	return *o.StartsAt
}

// GetStartsAtOk returns a tuple with the StartsAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallResponse) GetStartsAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartsAt) {
		return nil, false
	}
	return o.StartsAt, true
}

// HasStartsAt returns a boolean if a field has been set.
func (o *CallResponse) HasStartsAt() bool {
	if o != nil && !IsNil(o.StartsAt) {
		return true
	}

	return false
}

// SetStartsAt gets a reference to the given time.Time and assigns it to the StartsAt field.
func (o *CallResponse) SetStartsAt(v time.Time) {
	o.StartsAt = &v
}

// GetTeam returns the Team field value if set, zero value otherwise.
func (o *CallResponse) GetTeam() string {
	if o == nil || IsNil(o.Team) {
		var ret string
		return ret
	}
	return *o.Team
}

// GetTeamOk returns a tuple with the Team field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallResponse) GetTeamOk() (*string, bool) {
	if o == nil || IsNil(o.Team) {
		return nil, false
	}
	return o.Team, true
}

// HasTeam returns a boolean if a field has been set.
func (o *CallResponse) HasTeam() bool {
	if o != nil && !IsNil(o.Team) {
		return true
	}

	return false
}

// SetTeam gets a reference to the given string and assigns it to the Team field.
func (o *CallResponse) SetTeam(v string) {
	o.Team = &v
}

// GetThumbnails returns the Thumbnails field value if set, zero value otherwise.
func (o *CallResponse) GetThumbnails() ThumbnailResponse {
	if o == nil || IsNil(o.Thumbnails) {
		var ret ThumbnailResponse
		return ret
	}
	return *o.Thumbnails
}

// GetThumbnailsOk returns a tuple with the Thumbnails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CallResponse) GetThumbnailsOk() (*ThumbnailResponse, bool) {
	if o == nil || IsNil(o.Thumbnails) {
		return nil, false
	}
	return o.Thumbnails, true
}

// HasThumbnails returns a boolean if a field has been set.
func (o *CallResponse) HasThumbnails() bool {
	if o != nil && !IsNil(o.Thumbnails) {
		return true
	}

	return false
}

// SetThumbnails gets a reference to the given ThumbnailResponse and assigns it to the Thumbnails field.
func (o *CallResponse) SetThumbnails(v ThumbnailResponse) {
	o.Thumbnails = &v
}

// GetTranscribing returns the Transcribing field value
func (o *CallResponse) GetTranscribing() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Transcribing
}

// GetTranscribingOk returns a tuple with the Transcribing field value
// and a boolean to check if the value has been set.
func (o *CallResponse) GetTranscribingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Transcribing, true
}

// SetTranscribing sets field value
func (o *CallResponse) SetTranscribing(v bool) {
	o.Transcribing = v
}

// GetType returns the Type field value
func (o *CallResponse) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CallResponse) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CallResponse) SetType(v string) {
	o.Type = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *CallResponse) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *CallResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *CallResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o CallResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["backstage"] = o.Backstage
	toSerialize["blocked_user_ids"] = o.BlockedUserIds
	toSerialize["cid"] = o.Cid
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by"] = o.CreatedBy
	toSerialize["current_session_id"] = o.CurrentSessionId
	toSerialize["custom"] = o.Custom
	toSerialize["egress"] = o.Egress
	if !IsNil(o.EndedAt) {
		toSerialize["ended_at"] = o.EndedAt
	}
	toSerialize["id"] = o.Id
	toSerialize["ingress"] = o.Ingress
	toSerialize["recording"] = o.Recording
	if !IsNil(o.Session) {
		toSerialize["session"] = o.Session
	}
	toSerialize["settings"] = o.Settings
	if !IsNil(o.StartsAt) {
		toSerialize["starts_at"] = o.StartsAt
	}
	if !IsNil(o.Team) {
		toSerialize["team"] = o.Team
	}
	if !IsNil(o.Thumbnails) {
		toSerialize["thumbnails"] = o.Thumbnails
	}
	toSerialize["transcribing"] = o.Transcribing
	toSerialize["type"] = o.Type
	toSerialize["updated_at"] = o.UpdatedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CallResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"backstage",
		"blocked_user_ids",
		"cid",
		"created_at",
		"created_by",
		"current_session_id",
		"custom",
		"egress",
		"id",
		"ingress",
		"recording",
		"settings",
		"transcribing",
		"type",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCallResponse := _CallResponse{}

	err = json.Unmarshal(data, &varCallResponse)

	if err != nil {
		return err
	}

	*o = CallResponse(varCallResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "backstage")
		delete(additionalProperties, "blocked_user_ids")
		delete(additionalProperties, "cid")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "created_by")
		delete(additionalProperties, "current_session_id")
		delete(additionalProperties, "custom")
		delete(additionalProperties, "egress")
		delete(additionalProperties, "ended_at")
		delete(additionalProperties, "id")
		delete(additionalProperties, "ingress")
		delete(additionalProperties, "recording")
		delete(additionalProperties, "session")
		delete(additionalProperties, "settings")
		delete(additionalProperties, "starts_at")
		delete(additionalProperties, "team")
		delete(additionalProperties, "thumbnails")
		delete(additionalProperties, "transcribing")
		delete(additionalProperties, "type")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCallResponse struct {
	value *CallResponse
	isSet bool
}

func (v NullableCallResponse) Get() *CallResponse {
	return v.value
}

func (v *NullableCallResponse) Set(val *CallResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCallResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCallResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallResponse(val *CallResponse) *NullableCallResponse {
	return &NullableCallResponse{value: val, isSet: true}
}

func (v NullableCallResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


