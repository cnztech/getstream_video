/*
Stream API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v100.14.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getstream_video

import (
	"encoding/json"
	"fmt"
)

// OwnCapability All possibility of string to use
type OwnCapability string

// List of OwnCapability
const (
	BLOCK_USERS OwnCapability = "block-users"
	CREATE_CALL OwnCapability = "create-call"
	CREATE_REACTION OwnCapability = "create-reaction"
	END_CALL OwnCapability = "end-call"
	JOIN_BACKSTAGE OwnCapability = "join-backstage"
	JOIN_CALL OwnCapability = "join-call"
	JOIN_ENDED_CALL OwnCapability = "join-ended-call"
	MUTE_USERS OwnCapability = "mute-users"
	PIN_FOR_EVERYONE OwnCapability = "pin-for-everyone"
	READ_CALL OwnCapability = "read-call"
	REMOVE_CALL_MEMBER OwnCapability = "remove-call-member"
	SCREENSHARE OwnCapability = "screenshare"
	SEND_AUDIO OwnCapability = "send-audio"
	SEND_VIDEO OwnCapability = "send-video"
	START_BROADCAST_CALL OwnCapability = "start-broadcast-call"
	START_RECORD_CALL OwnCapability = "start-record-call"
	START_TRANSCRIPTION_CALL OwnCapability = "start-transcription-call"
	STOP_BROADCAST_CALL OwnCapability = "stop-broadcast-call"
	STOP_RECORD_CALL OwnCapability = "stop-record-call"
	STOP_TRANSCRIPTION_CALL OwnCapability = "stop-transcription-call"
	UPDATE_CALL OwnCapability = "update-call"
	UPDATE_CALL_MEMBER OwnCapability = "update-call-member"
	UPDATE_CALL_PERMISSIONS OwnCapability = "update-call-permissions"
	UPDATE_CALL_SETTINGS OwnCapability = "update-call-settings"
)

// All allowed values of OwnCapability enum
var AllowedOwnCapabilityEnumValues = []OwnCapability{
	"block-users",
	"create-call",
	"create-reaction",
	"end-call",
	"join-backstage",
	"join-call",
	"join-ended-call",
	"mute-users",
	"pin-for-everyone",
	"read-call",
	"remove-call-member",
	"screenshare",
	"send-audio",
	"send-video",
	"start-broadcast-call",
	"start-record-call",
	"start-transcription-call",
	"stop-broadcast-call",
	"stop-record-call",
	"stop-transcription-call",
	"update-call",
	"update-call-member",
	"update-call-permissions",
	"update-call-settings",
}

func (v *OwnCapability) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OwnCapability(value)
	for _, existing := range AllowedOwnCapabilityEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid OwnCapability", value)
}

// NewOwnCapabilityFromValue returns a pointer to a valid OwnCapability
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOwnCapabilityFromValue(v string) (*OwnCapability, error) {
	ev := OwnCapability(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for OwnCapability: valid values are %v", v, AllowedOwnCapabilityEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OwnCapability) IsValid() bool {
	for _, existing := range AllowedOwnCapabilityEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to OwnCapability value
func (v OwnCapability) Ptr() *OwnCapability {
	return &v
}

type NullableOwnCapability struct {
	value *OwnCapability
	isSet bool
}

func (v NullableOwnCapability) Get() *OwnCapability {
	return v.value
}

func (v *NullableOwnCapability) Set(val *OwnCapability) {
	v.value = val
	v.isSet = true
}

func (v NullableOwnCapability) IsSet() bool {
	return v.isSet
}

func (v *NullableOwnCapability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOwnCapability(val *OwnCapability) *NullableOwnCapability {
	return &NullableOwnCapability{value: val, isSet: true}
}

func (v NullableOwnCapability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOwnCapability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

