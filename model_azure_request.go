/*
Stream API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v100.14.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getstream_video

import (
	"encoding/json"
	"fmt"
)

// checks if the AzureRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureRequest{}

// AzureRequest struct for AzureRequest
type AzureRequest struct {
	AbsAccountName string `json:"abs_account_name"`
	AbsClientId string `json:"abs_client_id"`
	AbsClientSecret string `json:"abs_client_secret"`
	AbsTenantId string `json:"abs_tenant_id"`
	AdditionalProperties map[string]interface{}
}

type _AzureRequest AzureRequest

// NewAzureRequest instantiates a new AzureRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureRequest(absAccountName string, absClientId string, absClientSecret string, absTenantId string) *AzureRequest {
	this := AzureRequest{}
	this.AbsAccountName = absAccountName
	this.AbsClientId = absClientId
	this.AbsClientSecret = absClientSecret
	this.AbsTenantId = absTenantId
	return &this
}

// NewAzureRequestWithDefaults instantiates a new AzureRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureRequestWithDefaults() *AzureRequest {
	this := AzureRequest{}
	return &this
}

// GetAbsAccountName returns the AbsAccountName field value
func (o *AzureRequest) GetAbsAccountName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AbsAccountName
}

// GetAbsAccountNameOk returns a tuple with the AbsAccountName field value
// and a boolean to check if the value has been set.
func (o *AzureRequest) GetAbsAccountNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AbsAccountName, true
}

// SetAbsAccountName sets field value
func (o *AzureRequest) SetAbsAccountName(v string) {
	o.AbsAccountName = v
}

// GetAbsClientId returns the AbsClientId field value
func (o *AzureRequest) GetAbsClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AbsClientId
}

// GetAbsClientIdOk returns a tuple with the AbsClientId field value
// and a boolean to check if the value has been set.
func (o *AzureRequest) GetAbsClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AbsClientId, true
}

// SetAbsClientId sets field value
func (o *AzureRequest) SetAbsClientId(v string) {
	o.AbsClientId = v
}

// GetAbsClientSecret returns the AbsClientSecret field value
func (o *AzureRequest) GetAbsClientSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AbsClientSecret
}

// GetAbsClientSecretOk returns a tuple with the AbsClientSecret field value
// and a boolean to check if the value has been set.
func (o *AzureRequest) GetAbsClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AbsClientSecret, true
}

// SetAbsClientSecret sets field value
func (o *AzureRequest) SetAbsClientSecret(v string) {
	o.AbsClientSecret = v
}

// GetAbsTenantId returns the AbsTenantId field value
func (o *AzureRequest) GetAbsTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AbsTenantId
}

// GetAbsTenantIdOk returns a tuple with the AbsTenantId field value
// and a boolean to check if the value has been set.
func (o *AzureRequest) GetAbsTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AbsTenantId, true
}

// SetAbsTenantId sets field value
func (o *AzureRequest) SetAbsTenantId(v string) {
	o.AbsTenantId = v
}

func (o AzureRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["abs_account_name"] = o.AbsAccountName
	toSerialize["abs_client_id"] = o.AbsClientId
	toSerialize["abs_client_secret"] = o.AbsClientSecret
	toSerialize["abs_tenant_id"] = o.AbsTenantId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AzureRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"abs_account_name",
		"abs_client_id",
		"abs_client_secret",
		"abs_tenant_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAzureRequest := _AzureRequest{}

	err = json.Unmarshal(data, &varAzureRequest)

	if err != nil {
		return err
	}

	*o = AzureRequest(varAzureRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "abs_account_name")
		delete(additionalProperties, "abs_client_id")
		delete(additionalProperties, "abs_client_secret")
		delete(additionalProperties, "abs_tenant_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAzureRequest struct {
	value *AzureRequest
	isSet bool
}

func (v NullableAzureRequest) Get() *AzureRequest {
	return v.value
}

func (v *NullableAzureRequest) Set(val *AzureRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureRequest(val *AzureRequest) *NullableAzureRequest {
	return &NullableAzureRequest{value: val, isSet: true}
}

func (v NullableAzureRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


