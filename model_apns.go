/*
Stream API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v100.14.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getstream_video

import (
	"encoding/json"
	"fmt"
)

// checks if the APNS type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &APNS{}

// APNS struct for APNS
type APNS struct {
	Body string `json:"body"`
	Title string `json:"title"`
	AdditionalProperties map[string]interface{}
}

type _APNS APNS

// NewAPNS instantiates a new APNS object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPNS(body string, title string) *APNS {
	this := APNS{}
	this.Body = body
	this.Title = title
	return &this
}

// NewAPNSWithDefaults instantiates a new APNS object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPNSWithDefaults() *APNS {
	this := APNS{}
	return &this
}

// GetBody returns the Body field value
func (o *APNS) GetBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *APNS) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *APNS) SetBody(v string) {
	o.Body = v
}

// GetTitle returns the Title field value
func (o *APNS) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *APNS) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *APNS) SetTitle(v string) {
	o.Title = v
}

func (o APNS) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o APNS) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["body"] = o.Body
	toSerialize["title"] = o.Title

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *APNS) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"body",
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAPNS := _APNS{}

	err = json.Unmarshal(data, &varAPNS)

	if err != nil {
		return err
	}

	*o = APNS(varAPNS)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "body")
		delete(additionalProperties, "title")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAPNS struct {
	value *APNS
	isSet bool
}

func (v NullableAPNS) Get() *APNS {
	return v.value
}

func (v *NullableAPNS) Set(val *APNS) {
	v.value = val
	v.isSet = true
}

func (v NullableAPNS) IsSet() bool {
	return v.isSet
}

func (v *NullableAPNS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPNS(val *APNS) *NullableAPNS {
	return &NullableAPNS{value: val, isSet: true}
}

func (v NullableAPNS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPNS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


