/*
Stream API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v100.14.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getstream_video

import (
	"encoding/json"
)

// checks if the UpdateCallTypeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCallTypeRequest{}

// UpdateCallTypeRequest struct for UpdateCallTypeRequest
type UpdateCallTypeRequest struct {
	ExternalStorage *string `json:"external_storage,omitempty"`
	Grants *map[string][]string `json:"grants,omitempty"`
	NotificationSettings *NotificationSettingsRequest `json:"notification_settings,omitempty"`
	Settings *CallSettingsRequest `json:"settings,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateCallTypeRequest UpdateCallTypeRequest

// NewUpdateCallTypeRequest instantiates a new UpdateCallTypeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCallTypeRequest() *UpdateCallTypeRequest {
	this := UpdateCallTypeRequest{}
	return &this
}

// NewUpdateCallTypeRequestWithDefaults instantiates a new UpdateCallTypeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCallTypeRequestWithDefaults() *UpdateCallTypeRequest {
	this := UpdateCallTypeRequest{}
	return &this
}

// GetExternalStorage returns the ExternalStorage field value if set, zero value otherwise.
func (o *UpdateCallTypeRequest) GetExternalStorage() string {
	if o == nil || IsNil(o.ExternalStorage) {
		var ret string
		return ret
	}
	return *o.ExternalStorage
}

// GetExternalStorageOk returns a tuple with the ExternalStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCallTypeRequest) GetExternalStorageOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalStorage) {
		return nil, false
	}
	return o.ExternalStorage, true
}

// HasExternalStorage returns a boolean if a field has been set.
func (o *UpdateCallTypeRequest) HasExternalStorage() bool {
	if o != nil && !IsNil(o.ExternalStorage) {
		return true
	}

	return false
}

// SetExternalStorage gets a reference to the given string and assigns it to the ExternalStorage field.
func (o *UpdateCallTypeRequest) SetExternalStorage(v string) {
	o.ExternalStorage = &v
}

// GetGrants returns the Grants field value if set, zero value otherwise.
func (o *UpdateCallTypeRequest) GetGrants() map[string][]string {
	if o == nil || IsNil(o.Grants) {
		var ret map[string][]string
		return ret
	}
	return *o.Grants
}

// GetGrantsOk returns a tuple with the Grants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCallTypeRequest) GetGrantsOk() (*map[string][]string, bool) {
	if o == nil || IsNil(o.Grants) {
		return nil, false
	}
	return o.Grants, true
}

// HasGrants returns a boolean if a field has been set.
func (o *UpdateCallTypeRequest) HasGrants() bool {
	if o != nil && !IsNil(o.Grants) {
		return true
	}

	return false
}

// SetGrants gets a reference to the given map[string][]string and assigns it to the Grants field.
func (o *UpdateCallTypeRequest) SetGrants(v map[string][]string) {
	o.Grants = &v
}

// GetNotificationSettings returns the NotificationSettings field value if set, zero value otherwise.
func (o *UpdateCallTypeRequest) GetNotificationSettings() NotificationSettingsRequest {
	if o == nil || IsNil(o.NotificationSettings) {
		var ret NotificationSettingsRequest
		return ret
	}
	return *o.NotificationSettings
}

// GetNotificationSettingsOk returns a tuple with the NotificationSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCallTypeRequest) GetNotificationSettingsOk() (*NotificationSettingsRequest, bool) {
	if o == nil || IsNil(o.NotificationSettings) {
		return nil, false
	}
	return o.NotificationSettings, true
}

// HasNotificationSettings returns a boolean if a field has been set.
func (o *UpdateCallTypeRequest) HasNotificationSettings() bool {
	if o != nil && !IsNil(o.NotificationSettings) {
		return true
	}

	return false
}

// SetNotificationSettings gets a reference to the given NotificationSettingsRequest and assigns it to the NotificationSettings field.
func (o *UpdateCallTypeRequest) SetNotificationSettings(v NotificationSettingsRequest) {
	o.NotificationSettings = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *UpdateCallTypeRequest) GetSettings() CallSettingsRequest {
	if o == nil || IsNil(o.Settings) {
		var ret CallSettingsRequest
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCallTypeRequest) GetSettingsOk() (*CallSettingsRequest, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *UpdateCallTypeRequest) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given CallSettingsRequest and assigns it to the Settings field.
func (o *UpdateCallTypeRequest) SetSettings(v CallSettingsRequest) {
	o.Settings = &v
}

func (o UpdateCallTypeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCallTypeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExternalStorage) {
		toSerialize["external_storage"] = o.ExternalStorage
	}
	if !IsNil(o.Grants) {
		toSerialize["grants"] = o.Grants
	}
	if !IsNil(o.NotificationSettings) {
		toSerialize["notification_settings"] = o.NotificationSettings
	}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateCallTypeRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateCallTypeRequest := _UpdateCallTypeRequest{}

	err = json.Unmarshal(data, &varUpdateCallTypeRequest)

	if err != nil {
		return err
	}

	*o = UpdateCallTypeRequest(varUpdateCallTypeRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "external_storage")
		delete(additionalProperties, "grants")
		delete(additionalProperties, "notification_settings")
		delete(additionalProperties, "settings")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateCallTypeRequest struct {
	value *UpdateCallTypeRequest
	isSet bool
}

func (v NullableUpdateCallTypeRequest) Get() *UpdateCallTypeRequest {
	return v.value
}

func (v *NullableUpdateCallTypeRequest) Set(val *UpdateCallTypeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCallTypeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCallTypeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCallTypeRequest(val *UpdateCallTypeRequest) *NullableUpdateCallTypeRequest {
	return &NullableUpdateCallTypeRequest{value: val, isSet: true}
}

func (v NullableUpdateCallTypeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCallTypeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


