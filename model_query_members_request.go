/*
Stream API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v100.14.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getstream_video

import (
	"encoding/json"
	"fmt"
)

// checks if the QueryMembersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryMembersRequest{}

// QueryMembersRequest struct for QueryMembersRequest
type QueryMembersRequest struct {
	FilterConditions map[string]interface{} `json:"filter_conditions,omitempty"`
	Id string `json:"id"`
	Limit *int32 `json:"limit,omitempty"`
	Next *string `json:"next,omitempty"`
	Prev *string `json:"prev,omitempty"`
	Sort []SortParamRequest `json:"sort,omitempty"`
	Type string `json:"type"`
	AdditionalProperties map[string]interface{}
}

type _QueryMembersRequest QueryMembersRequest

// NewQueryMembersRequest instantiates a new QueryMembersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryMembersRequest(id string, type_ string) *QueryMembersRequest {
	this := QueryMembersRequest{}
	this.Id = id
	this.Type = type_
	return &this
}

// NewQueryMembersRequestWithDefaults instantiates a new QueryMembersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryMembersRequestWithDefaults() *QueryMembersRequest {
	this := QueryMembersRequest{}
	return &this
}

// GetFilterConditions returns the FilterConditions field value if set, zero value otherwise.
func (o *QueryMembersRequest) GetFilterConditions() map[string]interface{} {
	if o == nil || IsNil(o.FilterConditions) {
		var ret map[string]interface{}
		return ret
	}
	return o.FilterConditions
}

// GetFilterConditionsOk returns a tuple with the FilterConditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryMembersRequest) GetFilterConditionsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.FilterConditions) {
		return map[string]interface{}{}, false
	}
	return o.FilterConditions, true
}

// HasFilterConditions returns a boolean if a field has been set.
func (o *QueryMembersRequest) HasFilterConditions() bool {
	if o != nil && !IsNil(o.FilterConditions) {
		return true
	}

	return false
}

// SetFilterConditions gets a reference to the given map[string]interface{} and assigns it to the FilterConditions field.
func (o *QueryMembersRequest) SetFilterConditions(v map[string]interface{}) {
	o.FilterConditions = v
}

// GetId returns the Id field value
func (o *QueryMembersRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *QueryMembersRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *QueryMembersRequest) SetId(v string) {
	o.Id = v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *QueryMembersRequest) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryMembersRequest) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *QueryMembersRequest) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *QueryMembersRequest) SetLimit(v int32) {
	o.Limit = &v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *QueryMembersRequest) GetNext() string {
	if o == nil || IsNil(o.Next) {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryMembersRequest) GetNextOk() (*string, bool) {
	if o == nil || IsNil(o.Next) {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *QueryMembersRequest) HasNext() bool {
	if o != nil && !IsNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *QueryMembersRequest) SetNext(v string) {
	o.Next = &v
}

// GetPrev returns the Prev field value if set, zero value otherwise.
func (o *QueryMembersRequest) GetPrev() string {
	if o == nil || IsNil(o.Prev) {
		var ret string
		return ret
	}
	return *o.Prev
}

// GetPrevOk returns a tuple with the Prev field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryMembersRequest) GetPrevOk() (*string, bool) {
	if o == nil || IsNil(o.Prev) {
		return nil, false
	}
	return o.Prev, true
}

// HasPrev returns a boolean if a field has been set.
func (o *QueryMembersRequest) HasPrev() bool {
	if o != nil && !IsNil(o.Prev) {
		return true
	}

	return false
}

// SetPrev gets a reference to the given string and assigns it to the Prev field.
func (o *QueryMembersRequest) SetPrev(v string) {
	o.Prev = &v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *QueryMembersRequest) GetSort() []SortParamRequest {
	if o == nil || IsNil(o.Sort) {
		var ret []SortParamRequest
		return ret
	}
	return o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryMembersRequest) GetSortOk() ([]SortParamRequest, bool) {
	if o == nil || IsNil(o.Sort) {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *QueryMembersRequest) HasSort() bool {
	if o != nil && !IsNil(o.Sort) {
		return true
	}

	return false
}

// SetSort gets a reference to the given []SortParamRequest and assigns it to the Sort field.
func (o *QueryMembersRequest) SetSort(v []SortParamRequest) {
	o.Sort = v
}

// GetType returns the Type field value
func (o *QueryMembersRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *QueryMembersRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *QueryMembersRequest) SetType(v string) {
	o.Type = v
}

func (o QueryMembersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryMembersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FilterConditions) {
		toSerialize["filter_conditions"] = o.FilterConditions
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Next) {
		toSerialize["next"] = o.Next
	}
	if !IsNil(o.Prev) {
		toSerialize["prev"] = o.Prev
	}
	if !IsNil(o.Sort) {
		toSerialize["sort"] = o.Sort
	}
	toSerialize["type"] = o.Type

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QueryMembersRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQueryMembersRequest := _QueryMembersRequest{}

	err = json.Unmarshal(data, &varQueryMembersRequest)

	if err != nil {
		return err
	}

	*o = QueryMembersRequest(varQueryMembersRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "filter_conditions")
		delete(additionalProperties, "id")
		delete(additionalProperties, "limit")
		delete(additionalProperties, "next")
		delete(additionalProperties, "prev")
		delete(additionalProperties, "sort")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQueryMembersRequest struct {
	value *QueryMembersRequest
	isSet bool
}

func (v NullableQueryMembersRequest) Get() *QueryMembersRequest {
	return v.value
}

func (v *NullableQueryMembersRequest) Set(val *QueryMembersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryMembersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryMembersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryMembersRequest(val *QueryMembersRequest) *NullableQueryMembersRequest {
	return &NullableQueryMembersRequest{value: val, isSet: true}
}

func (v NullableQueryMembersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryMembersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


