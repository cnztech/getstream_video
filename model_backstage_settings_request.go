/*
Stream API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v100.14.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getstream_video

import (
	"encoding/json"
)

// checks if the BackstageSettingsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackstageSettingsRequest{}

// BackstageSettingsRequest struct for BackstageSettingsRequest
type BackstageSettingsRequest struct {
	Enabled *bool `json:"enabled,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BackstageSettingsRequest BackstageSettingsRequest

// NewBackstageSettingsRequest instantiates a new BackstageSettingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackstageSettingsRequest() *BackstageSettingsRequest {
	this := BackstageSettingsRequest{}
	return &this
}

// NewBackstageSettingsRequestWithDefaults instantiates a new BackstageSettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackstageSettingsRequestWithDefaults() *BackstageSettingsRequest {
	this := BackstageSettingsRequest{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *BackstageSettingsRequest) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackstageSettingsRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *BackstageSettingsRequest) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *BackstageSettingsRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o BackstageSettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackstageSettingsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BackstageSettingsRequest) UnmarshalJSON(data []byte) (err error) {
	varBackstageSettingsRequest := _BackstageSettingsRequest{}

	err = json.Unmarshal(data, &varBackstageSettingsRequest)

	if err != nil {
		return err
	}

	*o = BackstageSettingsRequest(varBackstageSettingsRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "enabled")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBackstageSettingsRequest struct {
	value *BackstageSettingsRequest
	isSet bool
}

func (v NullableBackstageSettingsRequest) Get() *BackstageSettingsRequest {
	return v.value
}

func (v *NullableBackstageSettingsRequest) Set(val *BackstageSettingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBackstageSettingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBackstageSettingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackstageSettingsRequest(val *BackstageSettingsRequest) *NullableBackstageSettingsRequest {
	return &NullableBackstageSettingsRequest{value: val, isSet: true}
}

func (v NullableBackstageSettingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackstageSettingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


