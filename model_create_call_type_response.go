/*
Stream API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v100.14.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getstream_video

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the CreateCallTypeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCallTypeResponse{}

// CreateCallTypeResponse struct for CreateCallTypeResponse
type CreateCallTypeResponse struct {
	CreatedAt time.Time `json:"created_at"`
	Duration string `json:"duration"`
	ExternalStorage *string `json:"external_storage,omitempty"`
	Grants map[string][]string `json:"grants"`
	Name string `json:"name"`
	NotificationSettings NotificationSettings `json:"notification_settings"`
	Settings CallSettingsResponse `json:"settings"`
	UpdatedAt time.Time `json:"updated_at"`
	AdditionalProperties map[string]interface{}
}

type _CreateCallTypeResponse CreateCallTypeResponse

// NewCreateCallTypeResponse instantiates a new CreateCallTypeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCallTypeResponse(createdAt time.Time, duration string, grants map[string][]string, name string, notificationSettings NotificationSettings, settings CallSettingsResponse, updatedAt time.Time) *CreateCallTypeResponse {
	this := CreateCallTypeResponse{}
	this.CreatedAt = createdAt
	this.Duration = duration
	this.Grants = grants
	this.Name = name
	this.NotificationSettings = notificationSettings
	this.Settings = settings
	this.UpdatedAt = updatedAt
	return &this
}

// NewCreateCallTypeResponseWithDefaults instantiates a new CreateCallTypeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCallTypeResponseWithDefaults() *CreateCallTypeResponse {
	this := CreateCallTypeResponse{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *CreateCallTypeResponse) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CreateCallTypeResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CreateCallTypeResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetDuration returns the Duration field value
func (o *CreateCallTypeResponse) GetDuration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *CreateCallTypeResponse) GetDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *CreateCallTypeResponse) SetDuration(v string) {
	o.Duration = v
}

// GetExternalStorage returns the ExternalStorage field value if set, zero value otherwise.
func (o *CreateCallTypeResponse) GetExternalStorage() string {
	if o == nil || IsNil(o.ExternalStorage) {
		var ret string
		return ret
	}
	return *o.ExternalStorage
}

// GetExternalStorageOk returns a tuple with the ExternalStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCallTypeResponse) GetExternalStorageOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalStorage) {
		return nil, false
	}
	return o.ExternalStorage, true
}

// HasExternalStorage returns a boolean if a field has been set.
func (o *CreateCallTypeResponse) HasExternalStorage() bool {
	if o != nil && !IsNil(o.ExternalStorage) {
		return true
	}

	return false
}

// SetExternalStorage gets a reference to the given string and assigns it to the ExternalStorage field.
func (o *CreateCallTypeResponse) SetExternalStorage(v string) {
	o.ExternalStorage = &v
}

// GetGrants returns the Grants field value
func (o *CreateCallTypeResponse) GetGrants() map[string][]string {
	if o == nil {
		var ret map[string][]string
		return ret
	}

	return o.Grants
}

// GetGrantsOk returns a tuple with the Grants field value
// and a boolean to check if the value has been set.
func (o *CreateCallTypeResponse) GetGrantsOk() (*map[string][]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Grants, true
}

// SetGrants sets field value
func (o *CreateCallTypeResponse) SetGrants(v map[string][]string) {
	o.Grants = v
}

// GetName returns the Name field value
func (o *CreateCallTypeResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateCallTypeResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateCallTypeResponse) SetName(v string) {
	o.Name = v
}

// GetNotificationSettings returns the NotificationSettings field value
func (o *CreateCallTypeResponse) GetNotificationSettings() NotificationSettings {
	if o == nil {
		var ret NotificationSettings
		return ret
	}

	return o.NotificationSettings
}

// GetNotificationSettingsOk returns a tuple with the NotificationSettings field value
// and a boolean to check if the value has been set.
func (o *CreateCallTypeResponse) GetNotificationSettingsOk() (*NotificationSettings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotificationSettings, true
}

// SetNotificationSettings sets field value
func (o *CreateCallTypeResponse) SetNotificationSettings(v NotificationSettings) {
	o.NotificationSettings = v
}

// GetSettings returns the Settings field value
func (o *CreateCallTypeResponse) GetSettings() CallSettingsResponse {
	if o == nil {
		var ret CallSettingsResponse
		return ret
	}

	return o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value
// and a boolean to check if the value has been set.
func (o *CreateCallTypeResponse) GetSettingsOk() (*CallSettingsResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Settings, true
}

// SetSettings sets field value
func (o *CreateCallTypeResponse) SetSettings(v CallSettingsResponse) {
	o.Settings = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *CreateCallTypeResponse) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *CreateCallTypeResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *CreateCallTypeResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o CreateCallTypeResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCallTypeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["duration"] = o.Duration
	if !IsNil(o.ExternalStorage) {
		toSerialize["external_storage"] = o.ExternalStorage
	}
	toSerialize["grants"] = o.Grants
	toSerialize["name"] = o.Name
	toSerialize["notification_settings"] = o.NotificationSettings
	toSerialize["settings"] = o.Settings
	toSerialize["updated_at"] = o.UpdatedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateCallTypeResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"duration",
		"grants",
		"name",
		"notification_settings",
		"settings",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateCallTypeResponse := _CreateCallTypeResponse{}

	err = json.Unmarshal(data, &varCreateCallTypeResponse)

	if err != nil {
		return err
	}

	*o = CreateCallTypeResponse(varCreateCallTypeResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "duration")
		delete(additionalProperties, "external_storage")
		delete(additionalProperties, "grants")
		delete(additionalProperties, "name")
		delete(additionalProperties, "notification_settings")
		delete(additionalProperties, "settings")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateCallTypeResponse struct {
	value *CreateCallTypeResponse
	isSet bool
}

func (v NullableCreateCallTypeResponse) Get() *CreateCallTypeResponse {
	return v.value
}

func (v *NullableCreateCallTypeResponse) Set(val *CreateCallTypeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCallTypeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCallTypeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCallTypeResponse(val *CreateCallTypeResponse) *NullableCreateCallTypeResponse {
	return &NullableCreateCallTypeResponse{value: val, isSet: true}
}

func (v NullableCreateCallTypeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCallTypeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


