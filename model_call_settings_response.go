/*
Stream API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v100.14.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getstream_video

import (
	"encoding/json"
	"fmt"
)

// checks if the CallSettingsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CallSettingsResponse{}

// CallSettingsResponse struct for CallSettingsResponse
type CallSettingsResponse struct {
	Audio AudioSettings `json:"audio"`
	Backstage BackstageSettings `json:"backstage"`
	Broadcasting BroadcastSettingsResponse `json:"broadcasting"`
	Geofencing GeofenceSettings `json:"geofencing"`
	Recording RecordSettingsResponse `json:"recording"`
	Ring RingSettings `json:"ring"`
	Screensharing ScreensharingSettings `json:"screensharing"`
	Thumbnails ThumbnailsSettings `json:"thumbnails"`
	Transcription TranscriptionSettings `json:"transcription"`
	Video VideoSettings `json:"video"`
	AdditionalProperties map[string]interface{}
}

type _CallSettingsResponse CallSettingsResponse

// NewCallSettingsResponse instantiates a new CallSettingsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallSettingsResponse(audio AudioSettings, backstage BackstageSettings, broadcasting BroadcastSettingsResponse, geofencing GeofenceSettings, recording RecordSettingsResponse, ring RingSettings, screensharing ScreensharingSettings, thumbnails ThumbnailsSettings, transcription TranscriptionSettings, video VideoSettings) *CallSettingsResponse {
	this := CallSettingsResponse{}
	this.Audio = audio
	this.Backstage = backstage
	this.Broadcasting = broadcasting
	this.Geofencing = geofencing
	this.Recording = recording
	this.Ring = ring
	this.Screensharing = screensharing
	this.Thumbnails = thumbnails
	this.Transcription = transcription
	this.Video = video
	return &this
}

// NewCallSettingsResponseWithDefaults instantiates a new CallSettingsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallSettingsResponseWithDefaults() *CallSettingsResponse {
	this := CallSettingsResponse{}
	return &this
}

// GetAudio returns the Audio field value
func (o *CallSettingsResponse) GetAudio() AudioSettings {
	if o == nil {
		var ret AudioSettings
		return ret
	}

	return o.Audio
}

// GetAudioOk returns a tuple with the Audio field value
// and a boolean to check if the value has been set.
func (o *CallSettingsResponse) GetAudioOk() (*AudioSettings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Audio, true
}

// SetAudio sets field value
func (o *CallSettingsResponse) SetAudio(v AudioSettings) {
	o.Audio = v
}

// GetBackstage returns the Backstage field value
func (o *CallSettingsResponse) GetBackstage() BackstageSettings {
	if o == nil {
		var ret BackstageSettings
		return ret
	}

	return o.Backstage
}

// GetBackstageOk returns a tuple with the Backstage field value
// and a boolean to check if the value has been set.
func (o *CallSettingsResponse) GetBackstageOk() (*BackstageSettings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Backstage, true
}

// SetBackstage sets field value
func (o *CallSettingsResponse) SetBackstage(v BackstageSettings) {
	o.Backstage = v
}

// GetBroadcasting returns the Broadcasting field value
func (o *CallSettingsResponse) GetBroadcasting() BroadcastSettingsResponse {
	if o == nil {
		var ret BroadcastSettingsResponse
		return ret
	}

	return o.Broadcasting
}

// GetBroadcastingOk returns a tuple with the Broadcasting field value
// and a boolean to check if the value has been set.
func (o *CallSettingsResponse) GetBroadcastingOk() (*BroadcastSettingsResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Broadcasting, true
}

// SetBroadcasting sets field value
func (o *CallSettingsResponse) SetBroadcasting(v BroadcastSettingsResponse) {
	o.Broadcasting = v
}

// GetGeofencing returns the Geofencing field value
func (o *CallSettingsResponse) GetGeofencing() GeofenceSettings {
	if o == nil {
		var ret GeofenceSettings
		return ret
	}

	return o.Geofencing
}

// GetGeofencingOk returns a tuple with the Geofencing field value
// and a boolean to check if the value has been set.
func (o *CallSettingsResponse) GetGeofencingOk() (*GeofenceSettings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Geofencing, true
}

// SetGeofencing sets field value
func (o *CallSettingsResponse) SetGeofencing(v GeofenceSettings) {
	o.Geofencing = v
}

// GetRecording returns the Recording field value
func (o *CallSettingsResponse) GetRecording() RecordSettingsResponse {
	if o == nil {
		var ret RecordSettingsResponse
		return ret
	}

	return o.Recording
}

// GetRecordingOk returns a tuple with the Recording field value
// and a boolean to check if the value has been set.
func (o *CallSettingsResponse) GetRecordingOk() (*RecordSettingsResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Recording, true
}

// SetRecording sets field value
func (o *CallSettingsResponse) SetRecording(v RecordSettingsResponse) {
	o.Recording = v
}

// GetRing returns the Ring field value
func (o *CallSettingsResponse) GetRing() RingSettings {
	if o == nil {
		var ret RingSettings
		return ret
	}

	return o.Ring
}

// GetRingOk returns a tuple with the Ring field value
// and a boolean to check if the value has been set.
func (o *CallSettingsResponse) GetRingOk() (*RingSettings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ring, true
}

// SetRing sets field value
func (o *CallSettingsResponse) SetRing(v RingSettings) {
	o.Ring = v
}

// GetScreensharing returns the Screensharing field value
func (o *CallSettingsResponse) GetScreensharing() ScreensharingSettings {
	if o == nil {
		var ret ScreensharingSettings
		return ret
	}

	return o.Screensharing
}

// GetScreensharingOk returns a tuple with the Screensharing field value
// and a boolean to check if the value has been set.
func (o *CallSettingsResponse) GetScreensharingOk() (*ScreensharingSettings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Screensharing, true
}

// SetScreensharing sets field value
func (o *CallSettingsResponse) SetScreensharing(v ScreensharingSettings) {
	o.Screensharing = v
}

// GetThumbnails returns the Thumbnails field value
func (o *CallSettingsResponse) GetThumbnails() ThumbnailsSettings {
	if o == nil {
		var ret ThumbnailsSettings
		return ret
	}

	return o.Thumbnails
}

// GetThumbnailsOk returns a tuple with the Thumbnails field value
// and a boolean to check if the value has been set.
func (o *CallSettingsResponse) GetThumbnailsOk() (*ThumbnailsSettings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Thumbnails, true
}

// SetThumbnails sets field value
func (o *CallSettingsResponse) SetThumbnails(v ThumbnailsSettings) {
	o.Thumbnails = v
}

// GetTranscription returns the Transcription field value
func (o *CallSettingsResponse) GetTranscription() TranscriptionSettings {
	if o == nil {
		var ret TranscriptionSettings
		return ret
	}

	return o.Transcription
}

// GetTranscriptionOk returns a tuple with the Transcription field value
// and a boolean to check if the value has been set.
func (o *CallSettingsResponse) GetTranscriptionOk() (*TranscriptionSettings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Transcription, true
}

// SetTranscription sets field value
func (o *CallSettingsResponse) SetTranscription(v TranscriptionSettings) {
	o.Transcription = v
}

// GetVideo returns the Video field value
func (o *CallSettingsResponse) GetVideo() VideoSettings {
	if o == nil {
		var ret VideoSettings
		return ret
	}

	return o.Video
}

// GetVideoOk returns a tuple with the Video field value
// and a boolean to check if the value has been set.
func (o *CallSettingsResponse) GetVideoOk() (*VideoSettings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Video, true
}

// SetVideo sets field value
func (o *CallSettingsResponse) SetVideo(v VideoSettings) {
	o.Video = v
}

func (o CallSettingsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CallSettingsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["audio"] = o.Audio
	toSerialize["backstage"] = o.Backstage
	toSerialize["broadcasting"] = o.Broadcasting
	toSerialize["geofencing"] = o.Geofencing
	toSerialize["recording"] = o.Recording
	toSerialize["ring"] = o.Ring
	toSerialize["screensharing"] = o.Screensharing
	toSerialize["thumbnails"] = o.Thumbnails
	toSerialize["transcription"] = o.Transcription
	toSerialize["video"] = o.Video

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CallSettingsResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"audio",
		"backstage",
		"broadcasting",
		"geofencing",
		"recording",
		"ring",
		"screensharing",
		"thumbnails",
		"transcription",
		"video",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCallSettingsResponse := _CallSettingsResponse{}

	err = json.Unmarshal(data, &varCallSettingsResponse)

	if err != nil {
		return err
	}

	*o = CallSettingsResponse(varCallSettingsResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "audio")
		delete(additionalProperties, "backstage")
		delete(additionalProperties, "broadcasting")
		delete(additionalProperties, "geofencing")
		delete(additionalProperties, "recording")
		delete(additionalProperties, "ring")
		delete(additionalProperties, "screensharing")
		delete(additionalProperties, "thumbnails")
		delete(additionalProperties, "transcription")
		delete(additionalProperties, "video")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCallSettingsResponse struct {
	value *CallSettingsResponse
	isSet bool
}

func (v NullableCallSettingsResponse) Get() *CallSettingsResponse {
	return v.value
}

func (v *NullableCallSettingsResponse) Set(val *CallSettingsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCallSettingsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCallSettingsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallSettingsResponse(val *CallSettingsResponse) *NullableCallSettingsResponse {
	return &NullableCallSettingsResponse{value: val, isSet: true}
}

func (v NullableCallSettingsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallSettingsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


