/*
Stream API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v100.14.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getstream_video

import (
	"encoding/json"
	"fmt"
)

// checks if the UserSessionStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserSessionStats{}

// UserSessionStats struct for UserSessionStats
type UserSessionStats struct {
	Os string `json:"os"`
	Sdk string `json:"sdk"`
	SdkVersion string `json:"sdk_version"`
	Timeline *CallTimeline `json:"timeline,omitempty"`
	WebrtcVersion string `json:"webrtc_version"`
	AdditionalProperties map[string]interface{}
}

type _UserSessionStats UserSessionStats

// NewUserSessionStats instantiates a new UserSessionStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserSessionStats(os string, sdk string, sdkVersion string, webrtcVersion string) *UserSessionStats {
	this := UserSessionStats{}
	this.Os = os
	this.Sdk = sdk
	this.SdkVersion = sdkVersion
	this.WebrtcVersion = webrtcVersion
	return &this
}

// NewUserSessionStatsWithDefaults instantiates a new UserSessionStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserSessionStatsWithDefaults() *UserSessionStats {
	this := UserSessionStats{}
	return &this
}

// GetOs returns the Os field value
func (o *UserSessionStats) GetOs() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Os
}

// GetOsOk returns a tuple with the Os field value
// and a boolean to check if the value has been set.
func (o *UserSessionStats) GetOsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Os, true
}

// SetOs sets field value
func (o *UserSessionStats) SetOs(v string) {
	o.Os = v
}

// GetSdk returns the Sdk field value
func (o *UserSessionStats) GetSdk() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sdk
}

// GetSdkOk returns a tuple with the Sdk field value
// and a boolean to check if the value has been set.
func (o *UserSessionStats) GetSdkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sdk, true
}

// SetSdk sets field value
func (o *UserSessionStats) SetSdk(v string) {
	o.Sdk = v
}

// GetSdkVersion returns the SdkVersion field value
func (o *UserSessionStats) GetSdkVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SdkVersion
}

// GetSdkVersionOk returns a tuple with the SdkVersion field value
// and a boolean to check if the value has been set.
func (o *UserSessionStats) GetSdkVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SdkVersion, true
}

// SetSdkVersion sets field value
func (o *UserSessionStats) SetSdkVersion(v string) {
	o.SdkVersion = v
}

// GetTimeline returns the Timeline field value if set, zero value otherwise.
func (o *UserSessionStats) GetTimeline() CallTimeline {
	if o == nil || IsNil(o.Timeline) {
		var ret CallTimeline
		return ret
	}
	return *o.Timeline
}

// GetTimelineOk returns a tuple with the Timeline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserSessionStats) GetTimelineOk() (*CallTimeline, bool) {
	if o == nil || IsNil(o.Timeline) {
		return nil, false
	}
	return o.Timeline, true
}

// HasTimeline returns a boolean if a field has been set.
func (o *UserSessionStats) HasTimeline() bool {
	if o != nil && !IsNil(o.Timeline) {
		return true
	}

	return false
}

// SetTimeline gets a reference to the given CallTimeline and assigns it to the Timeline field.
func (o *UserSessionStats) SetTimeline(v CallTimeline) {
	o.Timeline = &v
}

// GetWebrtcVersion returns the WebrtcVersion field value
func (o *UserSessionStats) GetWebrtcVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebrtcVersion
}

// GetWebrtcVersionOk returns a tuple with the WebrtcVersion field value
// and a boolean to check if the value has been set.
func (o *UserSessionStats) GetWebrtcVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WebrtcVersion, true
}

// SetWebrtcVersion sets field value
func (o *UserSessionStats) SetWebrtcVersion(v string) {
	o.WebrtcVersion = v
}

func (o UserSessionStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserSessionStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["os"] = o.Os
	toSerialize["sdk"] = o.Sdk
	toSerialize["sdk_version"] = o.SdkVersion
	if !IsNil(o.Timeline) {
		toSerialize["timeline"] = o.Timeline
	}
	toSerialize["webrtc_version"] = o.WebrtcVersion

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UserSessionStats) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"os",
		"sdk",
		"sdk_version",
		"webrtc_version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserSessionStats := _UserSessionStats{}

	err = json.Unmarshal(data, &varUserSessionStats)

	if err != nil {
		return err
	}

	*o = UserSessionStats(varUserSessionStats)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "os")
		delete(additionalProperties, "sdk")
		delete(additionalProperties, "sdk_version")
		delete(additionalProperties, "timeline")
		delete(additionalProperties, "webrtc_version")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUserSessionStats struct {
	value *UserSessionStats
	isSet bool
}

func (v NullableUserSessionStats) Get() *UserSessionStats {
	return v.value
}

func (v *NullableUserSessionStats) Set(val *UserSessionStats) {
	v.value = val
	v.isSet = true
}

func (v NullableUserSessionStats) IsSet() bool {
	return v.isSet
}

func (v *NullableUserSessionStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserSessionStats(val *UserSessionStats) *NullableUserSessionStats {
	return &NullableUserSessionStats{value: val, isSet: true}
}

func (v NullableUserSessionStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserSessionStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


