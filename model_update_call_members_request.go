/*
Stream API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v100.14.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getstream_video

import (
	"encoding/json"
)

// checks if the UpdateCallMembersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCallMembersRequest{}

// UpdateCallMembersRequest struct for UpdateCallMembersRequest
type UpdateCallMembersRequest struct {
	// List of userID to remove
	RemoveMembers []string `json:"remove_members,omitempty"`
	// List of members to update or insert
	UpdateMembers []MemberRequest `json:"update_members,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateCallMembersRequest UpdateCallMembersRequest

// NewUpdateCallMembersRequest instantiates a new UpdateCallMembersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCallMembersRequest() *UpdateCallMembersRequest {
	this := UpdateCallMembersRequest{}
	return &this
}

// NewUpdateCallMembersRequestWithDefaults instantiates a new UpdateCallMembersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCallMembersRequestWithDefaults() *UpdateCallMembersRequest {
	this := UpdateCallMembersRequest{}
	return &this
}

// GetRemoveMembers returns the RemoveMembers field value if set, zero value otherwise.
func (o *UpdateCallMembersRequest) GetRemoveMembers() []string {
	if o == nil || IsNil(o.RemoveMembers) {
		var ret []string
		return ret
	}
	return o.RemoveMembers
}

// GetRemoveMembersOk returns a tuple with the RemoveMembers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCallMembersRequest) GetRemoveMembersOk() ([]string, bool) {
	if o == nil || IsNil(o.RemoveMembers) {
		return nil, false
	}
	return o.RemoveMembers, true
}

// HasRemoveMembers returns a boolean if a field has been set.
func (o *UpdateCallMembersRequest) HasRemoveMembers() bool {
	if o != nil && !IsNil(o.RemoveMembers) {
		return true
	}

	return false
}

// SetRemoveMembers gets a reference to the given []string and assigns it to the RemoveMembers field.
func (o *UpdateCallMembersRequest) SetRemoveMembers(v []string) {
	o.RemoveMembers = v
}

// GetUpdateMembers returns the UpdateMembers field value if set, zero value otherwise.
func (o *UpdateCallMembersRequest) GetUpdateMembers() []MemberRequest {
	if o == nil || IsNil(o.UpdateMembers) {
		var ret []MemberRequest
		return ret
	}
	return o.UpdateMembers
}

// GetUpdateMembersOk returns a tuple with the UpdateMembers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCallMembersRequest) GetUpdateMembersOk() ([]MemberRequest, bool) {
	if o == nil || IsNil(o.UpdateMembers) {
		return nil, false
	}
	return o.UpdateMembers, true
}

// HasUpdateMembers returns a boolean if a field has been set.
func (o *UpdateCallMembersRequest) HasUpdateMembers() bool {
	if o != nil && !IsNil(o.UpdateMembers) {
		return true
	}

	return false
}

// SetUpdateMembers gets a reference to the given []MemberRequest and assigns it to the UpdateMembers field.
func (o *UpdateCallMembersRequest) SetUpdateMembers(v []MemberRequest) {
	o.UpdateMembers = v
}

func (o UpdateCallMembersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCallMembersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RemoveMembers) {
		toSerialize["remove_members"] = o.RemoveMembers
	}
	if !IsNil(o.UpdateMembers) {
		toSerialize["update_members"] = o.UpdateMembers
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateCallMembersRequest) UnmarshalJSON(data []byte) (err error) {
	varUpdateCallMembersRequest := _UpdateCallMembersRequest{}

	err = json.Unmarshal(data, &varUpdateCallMembersRequest)

	if err != nil {
		return err
	}

	*o = UpdateCallMembersRequest(varUpdateCallMembersRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "remove_members")
		delete(additionalProperties, "update_members")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateCallMembersRequest struct {
	value *UpdateCallMembersRequest
	isSet bool
}

func (v NullableUpdateCallMembersRequest) Get() *UpdateCallMembersRequest {
	return v.value
}

func (v *NullableUpdateCallMembersRequest) Set(val *UpdateCallMembersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCallMembersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCallMembersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCallMembersRequest(val *UpdateCallMembersRequest) *NullableUpdateCallMembersRequest {
	return &NullableUpdateCallMembersRequest{value: val, isSet: true}
}

func (v NullableUpdateCallMembersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCallMembersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


