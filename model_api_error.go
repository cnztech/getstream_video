/*
Stream API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v100.14.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getstream_video

import (
	"encoding/json"
	"fmt"
)

// checks if the APIError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &APIError{}

// APIError struct for APIError
type APIError struct {
	// Response HTTP status code
	StatusCode int32 `json:"StatusCode"`
	// API error code
	Code int32 `json:"code"`
	// Additional error-specific information
	Details []int32 `json:"details"`
	// Request duration
	Duration string `json:"duration"`
	// Additional error info
	ExceptionFields *map[string]string `json:"exception_fields,omitempty"`
	// Message describing an error
	Message string `json:"message"`
	// URL with additional information
	MoreInfo string `json:"more_info"`
	AdditionalProperties map[string]interface{}
}

type _APIError APIError

// NewAPIError instantiates a new APIError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIError(statusCode int32, code int32, details []int32, duration string, message string, moreInfo string) *APIError {
	this := APIError{}
	this.StatusCode = statusCode
	this.Code = code
	this.Details = details
	this.Duration = duration
	this.Message = message
	this.MoreInfo = moreInfo
	return &this
}

// NewAPIErrorWithDefaults instantiates a new APIError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIErrorWithDefaults() *APIError {
	this := APIError{}
	return &this
}

// GetStatusCode returns the StatusCode field value
func (o *APIError) GetStatusCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value
// and a boolean to check if the value has been set.
func (o *APIError) GetStatusCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusCode, true
}

// SetStatusCode sets field value
func (o *APIError) SetStatusCode(v int32) {
	o.StatusCode = v
}

// GetCode returns the Code field value
func (o *APIError) GetCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *APIError) GetCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *APIError) SetCode(v int32) {
	o.Code = v
}

// GetDetails returns the Details field value
func (o *APIError) GetDetails() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value
// and a boolean to check if the value has been set.
func (o *APIError) GetDetailsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Details, true
}

// SetDetails sets field value
func (o *APIError) SetDetails(v []int32) {
	o.Details = v
}

// GetDuration returns the Duration field value
func (o *APIError) GetDuration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *APIError) GetDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *APIError) SetDuration(v string) {
	o.Duration = v
}

// GetExceptionFields returns the ExceptionFields field value if set, zero value otherwise.
func (o *APIError) GetExceptionFields() map[string]string {
	if o == nil || IsNil(o.ExceptionFields) {
		var ret map[string]string
		return ret
	}
	return *o.ExceptionFields
}

// GetExceptionFieldsOk returns a tuple with the ExceptionFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIError) GetExceptionFieldsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ExceptionFields) {
		return nil, false
	}
	return o.ExceptionFields, true
}

// HasExceptionFields returns a boolean if a field has been set.
func (o *APIError) HasExceptionFields() bool {
	if o != nil && !IsNil(o.ExceptionFields) {
		return true
	}

	return false
}

// SetExceptionFields gets a reference to the given map[string]string and assigns it to the ExceptionFields field.
func (o *APIError) SetExceptionFields(v map[string]string) {
	o.ExceptionFields = &v
}

// GetMessage returns the Message field value
func (o *APIError) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *APIError) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *APIError) SetMessage(v string) {
	o.Message = v
}

// GetMoreInfo returns the MoreInfo field value
func (o *APIError) GetMoreInfo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MoreInfo
}

// GetMoreInfoOk returns a tuple with the MoreInfo field value
// and a boolean to check if the value has been set.
func (o *APIError) GetMoreInfoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MoreInfo, true
}

// SetMoreInfo sets field value
func (o *APIError) SetMoreInfo(v string) {
	o.MoreInfo = v
}

func (o APIError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o APIError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["StatusCode"] = o.StatusCode
	toSerialize["code"] = o.Code
	toSerialize["details"] = o.Details
	toSerialize["duration"] = o.Duration
	if !IsNil(o.ExceptionFields) {
		toSerialize["exception_fields"] = o.ExceptionFields
	}
	toSerialize["message"] = o.Message
	toSerialize["more_info"] = o.MoreInfo

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *APIError) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"StatusCode",
		"code",
		"details",
		"duration",
		"message",
		"more_info",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAPIError := _APIError{}

	err = json.Unmarshal(data, &varAPIError)

	if err != nil {
		return err
	}

	*o = APIError(varAPIError)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "StatusCode")
		delete(additionalProperties, "code")
		delete(additionalProperties, "details")
		delete(additionalProperties, "duration")
		delete(additionalProperties, "exception_fields")
		delete(additionalProperties, "message")
		delete(additionalProperties, "more_info")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAPIError struct {
	value *APIError
	isSet bool
}

func (v NullableAPIError) Get() *APIError {
	return v.value
}

func (v *NullableAPIError) Set(val *APIError) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIError) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIError(val *APIError) *NullableAPIError {
	return &NullableAPIError{value: val, isSet: true}
}

func (v NullableAPIError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


