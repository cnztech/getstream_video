/*
Stream API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v100.14.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getstream_video

import (
	"encoding/json"
)

// checks if the QueryCallsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryCallsRequest{}

// QueryCallsRequest struct for QueryCallsRequest
type QueryCallsRequest struct {
	FilterConditions map[string]interface{} `json:"filter_conditions,omitempty"`
	Limit *int32 `json:"limit,omitempty"`
	Next *string `json:"next,omitempty"`
	Prev *string `json:"prev,omitempty"`
	Sort []SortParamRequest `json:"sort,omitempty"`
	Watch *bool `json:"watch,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _QueryCallsRequest QueryCallsRequest

// NewQueryCallsRequest instantiates a new QueryCallsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryCallsRequest() *QueryCallsRequest {
	this := QueryCallsRequest{}
	return &this
}

// NewQueryCallsRequestWithDefaults instantiates a new QueryCallsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryCallsRequestWithDefaults() *QueryCallsRequest {
	this := QueryCallsRequest{}
	return &this
}

// GetFilterConditions returns the FilterConditions field value if set, zero value otherwise.
func (o *QueryCallsRequest) GetFilterConditions() map[string]interface{} {
	if o == nil || IsNil(o.FilterConditions) {
		var ret map[string]interface{}
		return ret
	}
	return o.FilterConditions
}

// GetFilterConditionsOk returns a tuple with the FilterConditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryCallsRequest) GetFilterConditionsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.FilterConditions) {
		return map[string]interface{}{}, false
	}
	return o.FilterConditions, true
}

// HasFilterConditions returns a boolean if a field has been set.
func (o *QueryCallsRequest) HasFilterConditions() bool {
	if o != nil && !IsNil(o.FilterConditions) {
		return true
	}

	return false
}

// SetFilterConditions gets a reference to the given map[string]interface{} and assigns it to the FilterConditions field.
func (o *QueryCallsRequest) SetFilterConditions(v map[string]interface{}) {
	o.FilterConditions = v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *QueryCallsRequest) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryCallsRequest) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *QueryCallsRequest) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *QueryCallsRequest) SetLimit(v int32) {
	o.Limit = &v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *QueryCallsRequest) GetNext() string {
	if o == nil || IsNil(o.Next) {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryCallsRequest) GetNextOk() (*string, bool) {
	if o == nil || IsNil(o.Next) {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *QueryCallsRequest) HasNext() bool {
	if o != nil && !IsNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *QueryCallsRequest) SetNext(v string) {
	o.Next = &v
}

// GetPrev returns the Prev field value if set, zero value otherwise.
func (o *QueryCallsRequest) GetPrev() string {
	if o == nil || IsNil(o.Prev) {
		var ret string
		return ret
	}
	return *o.Prev
}

// GetPrevOk returns a tuple with the Prev field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryCallsRequest) GetPrevOk() (*string, bool) {
	if o == nil || IsNil(o.Prev) {
		return nil, false
	}
	return o.Prev, true
}

// HasPrev returns a boolean if a field has been set.
func (o *QueryCallsRequest) HasPrev() bool {
	if o != nil && !IsNil(o.Prev) {
		return true
	}

	return false
}

// SetPrev gets a reference to the given string and assigns it to the Prev field.
func (o *QueryCallsRequest) SetPrev(v string) {
	o.Prev = &v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *QueryCallsRequest) GetSort() []SortParamRequest {
	if o == nil || IsNil(o.Sort) {
		var ret []SortParamRequest
		return ret
	}
	return o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryCallsRequest) GetSortOk() ([]SortParamRequest, bool) {
	if o == nil || IsNil(o.Sort) {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *QueryCallsRequest) HasSort() bool {
	if o != nil && !IsNil(o.Sort) {
		return true
	}

	return false
}

// SetSort gets a reference to the given []SortParamRequest and assigns it to the Sort field.
func (o *QueryCallsRequest) SetSort(v []SortParamRequest) {
	o.Sort = v
}

// GetWatch returns the Watch field value if set, zero value otherwise.
func (o *QueryCallsRequest) GetWatch() bool {
	if o == nil || IsNil(o.Watch) {
		var ret bool
		return ret
	}
	return *o.Watch
}

// GetWatchOk returns a tuple with the Watch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryCallsRequest) GetWatchOk() (*bool, bool) {
	if o == nil || IsNil(o.Watch) {
		return nil, false
	}
	return o.Watch, true
}

// HasWatch returns a boolean if a field has been set.
func (o *QueryCallsRequest) HasWatch() bool {
	if o != nil && !IsNil(o.Watch) {
		return true
	}

	return false
}

// SetWatch gets a reference to the given bool and assigns it to the Watch field.
func (o *QueryCallsRequest) SetWatch(v bool) {
	o.Watch = &v
}

func (o QueryCallsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryCallsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FilterConditions) {
		toSerialize["filter_conditions"] = o.FilterConditions
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Next) {
		toSerialize["next"] = o.Next
	}
	if !IsNil(o.Prev) {
		toSerialize["prev"] = o.Prev
	}
	if !IsNil(o.Sort) {
		toSerialize["sort"] = o.Sort
	}
	if !IsNil(o.Watch) {
		toSerialize["watch"] = o.Watch
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *QueryCallsRequest) UnmarshalJSON(data []byte) (err error) {
	varQueryCallsRequest := _QueryCallsRequest{}

	err = json.Unmarshal(data, &varQueryCallsRequest)

	if err != nil {
		return err
	}

	*o = QueryCallsRequest(varQueryCallsRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "filter_conditions")
		delete(additionalProperties, "limit")
		delete(additionalProperties, "next")
		delete(additionalProperties, "prev")
		delete(additionalProperties, "sort")
		delete(additionalProperties, "watch")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableQueryCallsRequest struct {
	value *QueryCallsRequest
	isSet bool
}

func (v NullableQueryCallsRequest) Get() *QueryCallsRequest {
	return v.value
}

func (v *NullableQueryCallsRequest) Set(val *QueryCallsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryCallsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryCallsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryCallsRequest(val *QueryCallsRequest) *NullableQueryCallsRequest {
	return &NullableQueryCallsRequest{value: val, isSet: true}
}

func (v NullableQueryCallsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryCallsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


