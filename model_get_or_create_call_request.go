/*
Stream API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v100.14.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getstream_video

import (
	"encoding/json"
)

// checks if the GetOrCreateCallRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOrCreateCallRequest{}

// GetOrCreateCallRequest struct for GetOrCreateCallRequest
type GetOrCreateCallRequest struct {
	Data *CallRequest `json:"data,omitempty"`
	MembersLimit *int32 `json:"members_limit,omitempty"`
	// if provided it sends a notification event to the members for this call
	Notify *bool `json:"notify,omitempty"`
	// if provided it sends a ring event to the members for this call
	Ring *bool `json:"ring,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetOrCreateCallRequest GetOrCreateCallRequest

// NewGetOrCreateCallRequest instantiates a new GetOrCreateCallRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOrCreateCallRequest() *GetOrCreateCallRequest {
	this := GetOrCreateCallRequest{}
	return &this
}

// NewGetOrCreateCallRequestWithDefaults instantiates a new GetOrCreateCallRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOrCreateCallRequestWithDefaults() *GetOrCreateCallRequest {
	this := GetOrCreateCallRequest{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetOrCreateCallRequest) GetData() CallRequest {
	if o == nil || IsNil(o.Data) {
		var ret CallRequest
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrCreateCallRequest) GetDataOk() (*CallRequest, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetOrCreateCallRequest) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given CallRequest and assigns it to the Data field.
func (o *GetOrCreateCallRequest) SetData(v CallRequest) {
	o.Data = &v
}

// GetMembersLimit returns the MembersLimit field value if set, zero value otherwise.
func (o *GetOrCreateCallRequest) GetMembersLimit() int32 {
	if o == nil || IsNil(o.MembersLimit) {
		var ret int32
		return ret
	}
	return *o.MembersLimit
}

// GetMembersLimitOk returns a tuple with the MembersLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrCreateCallRequest) GetMembersLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.MembersLimit) {
		return nil, false
	}
	return o.MembersLimit, true
}

// HasMembersLimit returns a boolean if a field has been set.
func (o *GetOrCreateCallRequest) HasMembersLimit() bool {
	if o != nil && !IsNil(o.MembersLimit) {
		return true
	}

	return false
}

// SetMembersLimit gets a reference to the given int32 and assigns it to the MembersLimit field.
func (o *GetOrCreateCallRequest) SetMembersLimit(v int32) {
	o.MembersLimit = &v
}

// GetNotify returns the Notify field value if set, zero value otherwise.
func (o *GetOrCreateCallRequest) GetNotify() bool {
	if o == nil || IsNil(o.Notify) {
		var ret bool
		return ret
	}
	return *o.Notify
}

// GetNotifyOk returns a tuple with the Notify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrCreateCallRequest) GetNotifyOk() (*bool, bool) {
	if o == nil || IsNil(o.Notify) {
		return nil, false
	}
	return o.Notify, true
}

// HasNotify returns a boolean if a field has been set.
func (o *GetOrCreateCallRequest) HasNotify() bool {
	if o != nil && !IsNil(o.Notify) {
		return true
	}

	return false
}

// SetNotify gets a reference to the given bool and assigns it to the Notify field.
func (o *GetOrCreateCallRequest) SetNotify(v bool) {
	o.Notify = &v
}

// GetRing returns the Ring field value if set, zero value otherwise.
func (o *GetOrCreateCallRequest) GetRing() bool {
	if o == nil || IsNil(o.Ring) {
		var ret bool
		return ret
	}
	return *o.Ring
}

// GetRingOk returns a tuple with the Ring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrCreateCallRequest) GetRingOk() (*bool, bool) {
	if o == nil || IsNil(o.Ring) {
		return nil, false
	}
	return o.Ring, true
}

// HasRing returns a boolean if a field has been set.
func (o *GetOrCreateCallRequest) HasRing() bool {
	if o != nil && !IsNil(o.Ring) {
		return true
	}

	return false
}

// SetRing gets a reference to the given bool and assigns it to the Ring field.
func (o *GetOrCreateCallRequest) SetRing(v bool) {
	o.Ring = &v
}

func (o GetOrCreateCallRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOrCreateCallRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.MembersLimit) {
		toSerialize["members_limit"] = o.MembersLimit
	}
	if !IsNil(o.Notify) {
		toSerialize["notify"] = o.Notify
	}
	if !IsNil(o.Ring) {
		toSerialize["ring"] = o.Ring
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetOrCreateCallRequest) UnmarshalJSON(data []byte) (err error) {
	varGetOrCreateCallRequest := _GetOrCreateCallRequest{}

	err = json.Unmarshal(data, &varGetOrCreateCallRequest)

	if err != nil {
		return err
	}

	*o = GetOrCreateCallRequest(varGetOrCreateCallRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "data")
		delete(additionalProperties, "members_limit")
		delete(additionalProperties, "notify")
		delete(additionalProperties, "ring")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetOrCreateCallRequest struct {
	value *GetOrCreateCallRequest
	isSet bool
}

func (v NullableGetOrCreateCallRequest) Get() *GetOrCreateCallRequest {
	return v.value
}

func (v *NullableGetOrCreateCallRequest) Set(val *GetOrCreateCallRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrCreateCallRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrCreateCallRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrCreateCallRequest(val *GetOrCreateCallRequest) *NullableGetOrCreateCallRequest {
	return &NullableGetOrCreateCallRequest{value: val, isSet: true}
}

func (v NullableGetOrCreateCallRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrCreateCallRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


