/*
Stream API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v100.14.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getstream_video

import (
	"encoding/json"
)

// checks if the CreateDeviceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateDeviceRequest{}

// CreateDeviceRequest struct for CreateDeviceRequest
type CreateDeviceRequest struct {
	Id *string `json:"id,omitempty"`
	PushProvider *string `json:"push_provider,omitempty"`
	PushProviderName *string `json:"push_provider_name,omitempty"`
	User *UserRequest `json:"user,omitempty"`
	UserId *string `json:"user_id,omitempty"`
	VoipToken *bool `json:"voip_token,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateDeviceRequest CreateDeviceRequest

// NewCreateDeviceRequest instantiates a new CreateDeviceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDeviceRequest() *CreateDeviceRequest {
	this := CreateDeviceRequest{}
	return &this
}

// NewCreateDeviceRequestWithDefaults instantiates a new CreateDeviceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDeviceRequestWithDefaults() *CreateDeviceRequest {
	this := CreateDeviceRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateDeviceRequest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceRequest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateDeviceRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateDeviceRequest) SetId(v string) {
	o.Id = &v
}

// GetPushProvider returns the PushProvider field value if set, zero value otherwise.
func (o *CreateDeviceRequest) GetPushProvider() string {
	if o == nil || IsNil(o.PushProvider) {
		var ret string
		return ret
	}
	return *o.PushProvider
}

// GetPushProviderOk returns a tuple with the PushProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceRequest) GetPushProviderOk() (*string, bool) {
	if o == nil || IsNil(o.PushProvider) {
		return nil, false
	}
	return o.PushProvider, true
}

// HasPushProvider returns a boolean if a field has been set.
func (o *CreateDeviceRequest) HasPushProvider() bool {
	if o != nil && !IsNil(o.PushProvider) {
		return true
	}

	return false
}

// SetPushProvider gets a reference to the given string and assigns it to the PushProvider field.
func (o *CreateDeviceRequest) SetPushProvider(v string) {
	o.PushProvider = &v
}

// GetPushProviderName returns the PushProviderName field value if set, zero value otherwise.
func (o *CreateDeviceRequest) GetPushProviderName() string {
	if o == nil || IsNil(o.PushProviderName) {
		var ret string
		return ret
	}
	return *o.PushProviderName
}

// GetPushProviderNameOk returns a tuple with the PushProviderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceRequest) GetPushProviderNameOk() (*string, bool) {
	if o == nil || IsNil(o.PushProviderName) {
		return nil, false
	}
	return o.PushProviderName, true
}

// HasPushProviderName returns a boolean if a field has been set.
func (o *CreateDeviceRequest) HasPushProviderName() bool {
	if o != nil && !IsNil(o.PushProviderName) {
		return true
	}

	return false
}

// SetPushProviderName gets a reference to the given string and assigns it to the PushProviderName field.
func (o *CreateDeviceRequest) SetPushProviderName(v string) {
	o.PushProviderName = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *CreateDeviceRequest) GetUser() UserRequest {
	if o == nil || IsNil(o.User) {
		var ret UserRequest
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceRequest) GetUserOk() (*UserRequest, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *CreateDeviceRequest) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given UserRequest and assigns it to the User field.
func (o *CreateDeviceRequest) SetUser(v UserRequest) {
	o.User = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *CreateDeviceRequest) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceRequest) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *CreateDeviceRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *CreateDeviceRequest) SetUserId(v string) {
	o.UserId = &v
}

// GetVoipToken returns the VoipToken field value if set, zero value otherwise.
func (o *CreateDeviceRequest) GetVoipToken() bool {
	if o == nil || IsNil(o.VoipToken) {
		var ret bool
		return ret
	}
	return *o.VoipToken
}

// GetVoipTokenOk returns a tuple with the VoipToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceRequest) GetVoipTokenOk() (*bool, bool) {
	if o == nil || IsNil(o.VoipToken) {
		return nil, false
	}
	return o.VoipToken, true
}

// HasVoipToken returns a boolean if a field has been set.
func (o *CreateDeviceRequest) HasVoipToken() bool {
	if o != nil && !IsNil(o.VoipToken) {
		return true
	}

	return false
}

// SetVoipToken gets a reference to the given bool and assigns it to the VoipToken field.
func (o *CreateDeviceRequest) SetVoipToken(v bool) {
	o.VoipToken = &v
}

func (o CreateDeviceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDeviceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.PushProvider) {
		toSerialize["push_provider"] = o.PushProvider
	}
	if !IsNil(o.PushProviderName) {
		toSerialize["push_provider_name"] = o.PushProviderName
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.VoipToken) {
		toSerialize["voip_token"] = o.VoipToken
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateDeviceRequest) UnmarshalJSON(data []byte) (err error) {
	varCreateDeviceRequest := _CreateDeviceRequest{}

	err = json.Unmarshal(data, &varCreateDeviceRequest)

	if err != nil {
		return err
	}

	*o = CreateDeviceRequest(varCreateDeviceRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "push_provider")
		delete(additionalProperties, "push_provider_name")
		delete(additionalProperties, "user")
		delete(additionalProperties, "user_id")
		delete(additionalProperties, "voip_token")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateDeviceRequest struct {
	value *CreateDeviceRequest
	isSet bool
}

func (v NullableCreateDeviceRequest) Get() *CreateDeviceRequest {
	return v.value
}

func (v *NullableCreateDeviceRequest) Set(val *CreateDeviceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDeviceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDeviceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDeviceRequest(val *CreateDeviceRequest) *NullableCreateDeviceRequest {
	return &NullableCreateDeviceRequest{value: val, isSet: true}
}

func (v NullableCreateDeviceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDeviceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


