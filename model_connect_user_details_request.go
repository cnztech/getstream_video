/*
Stream API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v100.14.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getstream_video

import (
	"encoding/json"
	"fmt"
)

// checks if the ConnectUserDetailsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectUserDetailsRequest{}

// ConnectUserDetailsRequest struct for ConnectUserDetailsRequest
type ConnectUserDetailsRequest struct {
	Custom map[string]interface{} `json:"custom,omitempty"`
	Id string `json:"id"`
	Image *string `json:"image,omitempty"`
	Language *string `json:"language,omitempty"`
	Name *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ConnectUserDetailsRequest ConnectUserDetailsRequest

// NewConnectUserDetailsRequest instantiates a new ConnectUserDetailsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectUserDetailsRequest(id string) *ConnectUserDetailsRequest {
	this := ConnectUserDetailsRequest{}
	this.Id = id
	return &this
}

// NewConnectUserDetailsRequestWithDefaults instantiates a new ConnectUserDetailsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectUserDetailsRequestWithDefaults() *ConnectUserDetailsRequest {
	this := ConnectUserDetailsRequest{}
	return &this
}

// GetCustom returns the Custom field value if set, zero value otherwise.
func (o *ConnectUserDetailsRequest) GetCustom() map[string]interface{} {
	if o == nil || IsNil(o.Custom) {
		var ret map[string]interface{}
		return ret
	}
	return o.Custom
}

// GetCustomOk returns a tuple with the Custom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectUserDetailsRequest) GetCustomOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Custom) {
		return map[string]interface{}{}, false
	}
	return o.Custom, true
}

// HasCustom returns a boolean if a field has been set.
func (o *ConnectUserDetailsRequest) HasCustom() bool {
	if o != nil && !IsNil(o.Custom) {
		return true
	}

	return false
}

// SetCustom gets a reference to the given map[string]interface{} and assigns it to the Custom field.
func (o *ConnectUserDetailsRequest) SetCustom(v map[string]interface{}) {
	o.Custom = v
}

// GetId returns the Id field value
func (o *ConnectUserDetailsRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ConnectUserDetailsRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ConnectUserDetailsRequest) SetId(v string) {
	o.Id = v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *ConnectUserDetailsRequest) GetImage() string {
	if o == nil || IsNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectUserDetailsRequest) GetImageOk() (*string, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *ConnectUserDetailsRequest) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *ConnectUserDetailsRequest) SetImage(v string) {
	o.Image = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *ConnectUserDetailsRequest) GetLanguage() string {
	if o == nil || IsNil(o.Language) {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectUserDetailsRequest) GetLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *ConnectUserDetailsRequest) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *ConnectUserDetailsRequest) SetLanguage(v string) {
	o.Language = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ConnectUserDetailsRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectUserDetailsRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ConnectUserDetailsRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ConnectUserDetailsRequest) SetName(v string) {
	o.Name = &v
}

func (o ConnectUserDetailsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectUserDetailsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Custom) {
		toSerialize["custom"] = o.Custom
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ConnectUserDetailsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConnectUserDetailsRequest := _ConnectUserDetailsRequest{}

	err = json.Unmarshal(data, &varConnectUserDetailsRequest)

	if err != nil {
		return err
	}

	*o = ConnectUserDetailsRequest(varConnectUserDetailsRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "custom")
		delete(additionalProperties, "id")
		delete(additionalProperties, "image")
		delete(additionalProperties, "language")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableConnectUserDetailsRequest struct {
	value *ConnectUserDetailsRequest
	isSet bool
}

func (v NullableConnectUserDetailsRequest) Get() *ConnectUserDetailsRequest {
	return v.value
}

func (v *NullableConnectUserDetailsRequest) Set(val *ConnectUserDetailsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectUserDetailsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectUserDetailsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectUserDetailsRequest(val *ConnectUserDetailsRequest) *NullableConnectUserDetailsRequest {
	return &NullableConnectUserDetailsRequest{value: val, isSet: true}
}

func (v NullableConnectUserDetailsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectUserDetailsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


