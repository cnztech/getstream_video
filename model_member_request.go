/*
Stream API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v100.14.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getstream_video

import (
	"encoding/json"
	"fmt"
)

// checks if the MemberRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MemberRequest{}

// MemberRequest struct for MemberRequest
type MemberRequest struct {
	// Custom data for this object
	Custom map[string]interface{} `json:"custom,omitempty"`
	Role *string `json:"role,omitempty"`
	UserId string `json:"user_id"`
	AdditionalProperties map[string]interface{}
}

type _MemberRequest MemberRequest

// NewMemberRequest instantiates a new MemberRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberRequest(userId string) *MemberRequest {
	this := MemberRequest{}
	this.UserId = userId
	return &this
}

// NewMemberRequestWithDefaults instantiates a new MemberRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberRequestWithDefaults() *MemberRequest {
	this := MemberRequest{}
	return &this
}

// GetCustom returns the Custom field value if set, zero value otherwise.
func (o *MemberRequest) GetCustom() map[string]interface{} {
	if o == nil || IsNil(o.Custom) {
		var ret map[string]interface{}
		return ret
	}
	return o.Custom
}

// GetCustomOk returns a tuple with the Custom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberRequest) GetCustomOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Custom) {
		return map[string]interface{}{}, false
	}
	return o.Custom, true
}

// HasCustom returns a boolean if a field has been set.
func (o *MemberRequest) HasCustom() bool {
	if o != nil && !IsNil(o.Custom) {
		return true
	}

	return false
}

// SetCustom gets a reference to the given map[string]interface{} and assigns it to the Custom field.
func (o *MemberRequest) SetCustom(v map[string]interface{}) {
	o.Custom = v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *MemberRequest) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemberRequest) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *MemberRequest) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *MemberRequest) SetRole(v string) {
	o.Role = &v
}

// GetUserId returns the UserId field value
func (o *MemberRequest) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *MemberRequest) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *MemberRequest) SetUserId(v string) {
	o.UserId = v
}

func (o MemberRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MemberRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Custom) {
		toSerialize["custom"] = o.Custom
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	toSerialize["user_id"] = o.UserId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MemberRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"user_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMemberRequest := _MemberRequest{}

	err = json.Unmarshal(data, &varMemberRequest)

	if err != nil {
		return err
	}

	*o = MemberRequest(varMemberRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "custom")
		delete(additionalProperties, "role")
		delete(additionalProperties, "user_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMemberRequest struct {
	value *MemberRequest
	isSet bool
}

func (v NullableMemberRequest) Get() *MemberRequest {
	return v.value
}

func (v *NullableMemberRequest) Set(val *MemberRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberRequest(val *MemberRequest) *NullableMemberRequest {
	return &NullableMemberRequest{value: val, isSet: true}
}

func (v NullableMemberRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


