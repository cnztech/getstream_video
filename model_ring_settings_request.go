/*
Stream API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v100.14.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getstream_video

import (
	"encoding/json"
)

// checks if the RingSettingsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RingSettingsRequest{}

// RingSettingsRequest struct for RingSettingsRequest
type RingSettingsRequest struct {
	AutoCancelTimeoutMs *int32 `json:"auto_cancel_timeout_ms,omitempty"`
	IncomingCallTimeoutMs *int32 `json:"incoming_call_timeout_ms,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RingSettingsRequest RingSettingsRequest

// NewRingSettingsRequest instantiates a new RingSettingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRingSettingsRequest() *RingSettingsRequest {
	this := RingSettingsRequest{}
	return &this
}

// NewRingSettingsRequestWithDefaults instantiates a new RingSettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRingSettingsRequestWithDefaults() *RingSettingsRequest {
	this := RingSettingsRequest{}
	return &this
}

// GetAutoCancelTimeoutMs returns the AutoCancelTimeoutMs field value if set, zero value otherwise.
func (o *RingSettingsRequest) GetAutoCancelTimeoutMs() int32 {
	if o == nil || IsNil(o.AutoCancelTimeoutMs) {
		var ret int32
		return ret
	}
	return *o.AutoCancelTimeoutMs
}

// GetAutoCancelTimeoutMsOk returns a tuple with the AutoCancelTimeoutMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RingSettingsRequest) GetAutoCancelTimeoutMsOk() (*int32, bool) {
	if o == nil || IsNil(o.AutoCancelTimeoutMs) {
		return nil, false
	}
	return o.AutoCancelTimeoutMs, true
}

// HasAutoCancelTimeoutMs returns a boolean if a field has been set.
func (o *RingSettingsRequest) HasAutoCancelTimeoutMs() bool {
	if o != nil && !IsNil(o.AutoCancelTimeoutMs) {
		return true
	}

	return false
}

// SetAutoCancelTimeoutMs gets a reference to the given int32 and assigns it to the AutoCancelTimeoutMs field.
func (o *RingSettingsRequest) SetAutoCancelTimeoutMs(v int32) {
	o.AutoCancelTimeoutMs = &v
}

// GetIncomingCallTimeoutMs returns the IncomingCallTimeoutMs field value if set, zero value otherwise.
func (o *RingSettingsRequest) GetIncomingCallTimeoutMs() int32 {
	if o == nil || IsNil(o.IncomingCallTimeoutMs) {
		var ret int32
		return ret
	}
	return *o.IncomingCallTimeoutMs
}

// GetIncomingCallTimeoutMsOk returns a tuple with the IncomingCallTimeoutMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RingSettingsRequest) GetIncomingCallTimeoutMsOk() (*int32, bool) {
	if o == nil || IsNil(o.IncomingCallTimeoutMs) {
		return nil, false
	}
	return o.IncomingCallTimeoutMs, true
}

// HasIncomingCallTimeoutMs returns a boolean if a field has been set.
func (o *RingSettingsRequest) HasIncomingCallTimeoutMs() bool {
	if o != nil && !IsNil(o.IncomingCallTimeoutMs) {
		return true
	}

	return false
}

// SetIncomingCallTimeoutMs gets a reference to the given int32 and assigns it to the IncomingCallTimeoutMs field.
func (o *RingSettingsRequest) SetIncomingCallTimeoutMs(v int32) {
	o.IncomingCallTimeoutMs = &v
}

func (o RingSettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RingSettingsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AutoCancelTimeoutMs) {
		toSerialize["auto_cancel_timeout_ms"] = o.AutoCancelTimeoutMs
	}
	if !IsNil(o.IncomingCallTimeoutMs) {
		toSerialize["incoming_call_timeout_ms"] = o.IncomingCallTimeoutMs
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RingSettingsRequest) UnmarshalJSON(data []byte) (err error) {
	varRingSettingsRequest := _RingSettingsRequest{}

	err = json.Unmarshal(data, &varRingSettingsRequest)

	if err != nil {
		return err
	}

	*o = RingSettingsRequest(varRingSettingsRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "auto_cancel_timeout_ms")
		delete(additionalProperties, "incoming_call_timeout_ms")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRingSettingsRequest struct {
	value *RingSettingsRequest
	isSet bool
}

func (v NullableRingSettingsRequest) Get() *RingSettingsRequest {
	return v.value
}

func (v *NullableRingSettingsRequest) Set(val *RingSettingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRingSettingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRingSettingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRingSettingsRequest(val *RingSettingsRequest) *NullableRingSettingsRequest {
	return &NullableRingSettingsRequest{value: val, isSet: true}
}

func (v NullableRingSettingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRingSettingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


