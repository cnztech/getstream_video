/*
Stream API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v100.14.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getstream_video

import (
	"encoding/json"
)

// checks if the MuteUsersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MuteUsersRequest{}

// MuteUsersRequest struct for MuteUsersRequest
type MuteUsersRequest struct {
	Audio *bool `json:"audio,omitempty"`
	MuteAllUsers *bool `json:"mute_all_users,omitempty"`
	Screenshare *bool `json:"screenshare,omitempty"`
	ScreenshareAudio *bool `json:"screenshare_audio,omitempty"`
	UserIds []string `json:"user_ids,omitempty"`
	Video *bool `json:"video,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MuteUsersRequest MuteUsersRequest

// NewMuteUsersRequest instantiates a new MuteUsersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMuteUsersRequest() *MuteUsersRequest {
	this := MuteUsersRequest{}
	return &this
}

// NewMuteUsersRequestWithDefaults instantiates a new MuteUsersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMuteUsersRequestWithDefaults() *MuteUsersRequest {
	this := MuteUsersRequest{}
	return &this
}

// GetAudio returns the Audio field value if set, zero value otherwise.
func (o *MuteUsersRequest) GetAudio() bool {
	if o == nil || IsNil(o.Audio) {
		var ret bool
		return ret
	}
	return *o.Audio
}

// GetAudioOk returns a tuple with the Audio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MuteUsersRequest) GetAudioOk() (*bool, bool) {
	if o == nil || IsNil(o.Audio) {
		return nil, false
	}
	return o.Audio, true
}

// HasAudio returns a boolean if a field has been set.
func (o *MuteUsersRequest) HasAudio() bool {
	if o != nil && !IsNil(o.Audio) {
		return true
	}

	return false
}

// SetAudio gets a reference to the given bool and assigns it to the Audio field.
func (o *MuteUsersRequest) SetAudio(v bool) {
	o.Audio = &v
}

// GetMuteAllUsers returns the MuteAllUsers field value if set, zero value otherwise.
func (o *MuteUsersRequest) GetMuteAllUsers() bool {
	if o == nil || IsNil(o.MuteAllUsers) {
		var ret bool
		return ret
	}
	return *o.MuteAllUsers
}

// GetMuteAllUsersOk returns a tuple with the MuteAllUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MuteUsersRequest) GetMuteAllUsersOk() (*bool, bool) {
	if o == nil || IsNil(o.MuteAllUsers) {
		return nil, false
	}
	return o.MuteAllUsers, true
}

// HasMuteAllUsers returns a boolean if a field has been set.
func (o *MuteUsersRequest) HasMuteAllUsers() bool {
	if o != nil && !IsNil(o.MuteAllUsers) {
		return true
	}

	return false
}

// SetMuteAllUsers gets a reference to the given bool and assigns it to the MuteAllUsers field.
func (o *MuteUsersRequest) SetMuteAllUsers(v bool) {
	o.MuteAllUsers = &v
}

// GetScreenshare returns the Screenshare field value if set, zero value otherwise.
func (o *MuteUsersRequest) GetScreenshare() bool {
	if o == nil || IsNil(o.Screenshare) {
		var ret bool
		return ret
	}
	return *o.Screenshare
}

// GetScreenshareOk returns a tuple with the Screenshare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MuteUsersRequest) GetScreenshareOk() (*bool, bool) {
	if o == nil || IsNil(o.Screenshare) {
		return nil, false
	}
	return o.Screenshare, true
}

// HasScreenshare returns a boolean if a field has been set.
func (o *MuteUsersRequest) HasScreenshare() bool {
	if o != nil && !IsNil(o.Screenshare) {
		return true
	}

	return false
}

// SetScreenshare gets a reference to the given bool and assigns it to the Screenshare field.
func (o *MuteUsersRequest) SetScreenshare(v bool) {
	o.Screenshare = &v
}

// GetScreenshareAudio returns the ScreenshareAudio field value if set, zero value otherwise.
func (o *MuteUsersRequest) GetScreenshareAudio() bool {
	if o == nil || IsNil(o.ScreenshareAudio) {
		var ret bool
		return ret
	}
	return *o.ScreenshareAudio
}

// GetScreenshareAudioOk returns a tuple with the ScreenshareAudio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MuteUsersRequest) GetScreenshareAudioOk() (*bool, bool) {
	if o == nil || IsNil(o.ScreenshareAudio) {
		return nil, false
	}
	return o.ScreenshareAudio, true
}

// HasScreenshareAudio returns a boolean if a field has been set.
func (o *MuteUsersRequest) HasScreenshareAudio() bool {
	if o != nil && !IsNil(o.ScreenshareAudio) {
		return true
	}

	return false
}

// SetScreenshareAudio gets a reference to the given bool and assigns it to the ScreenshareAudio field.
func (o *MuteUsersRequest) SetScreenshareAudio(v bool) {
	o.ScreenshareAudio = &v
}

// GetUserIds returns the UserIds field value if set, zero value otherwise.
func (o *MuteUsersRequest) GetUserIds() []string {
	if o == nil || IsNil(o.UserIds) {
		var ret []string
		return ret
	}
	return o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MuteUsersRequest) GetUserIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.UserIds) {
		return nil, false
	}
	return o.UserIds, true
}

// HasUserIds returns a boolean if a field has been set.
func (o *MuteUsersRequest) HasUserIds() bool {
	if o != nil && !IsNil(o.UserIds) {
		return true
	}

	return false
}

// SetUserIds gets a reference to the given []string and assigns it to the UserIds field.
func (o *MuteUsersRequest) SetUserIds(v []string) {
	o.UserIds = v
}

// GetVideo returns the Video field value if set, zero value otherwise.
func (o *MuteUsersRequest) GetVideo() bool {
	if o == nil || IsNil(o.Video) {
		var ret bool
		return ret
	}
	return *o.Video
}

// GetVideoOk returns a tuple with the Video field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MuteUsersRequest) GetVideoOk() (*bool, bool) {
	if o == nil || IsNil(o.Video) {
		return nil, false
	}
	return o.Video, true
}

// HasVideo returns a boolean if a field has been set.
func (o *MuteUsersRequest) HasVideo() bool {
	if o != nil && !IsNil(o.Video) {
		return true
	}

	return false
}

// SetVideo gets a reference to the given bool and assigns it to the Video field.
func (o *MuteUsersRequest) SetVideo(v bool) {
	o.Video = &v
}

func (o MuteUsersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MuteUsersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Audio) {
		toSerialize["audio"] = o.Audio
	}
	if !IsNil(o.MuteAllUsers) {
		toSerialize["mute_all_users"] = o.MuteAllUsers
	}
	if !IsNil(o.Screenshare) {
		toSerialize["screenshare"] = o.Screenshare
	}
	if !IsNil(o.ScreenshareAudio) {
		toSerialize["screenshare_audio"] = o.ScreenshareAudio
	}
	if !IsNil(o.UserIds) {
		toSerialize["user_ids"] = o.UserIds
	}
	if !IsNil(o.Video) {
		toSerialize["video"] = o.Video
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MuteUsersRequest) UnmarshalJSON(data []byte) (err error) {
	varMuteUsersRequest := _MuteUsersRequest{}

	err = json.Unmarshal(data, &varMuteUsersRequest)

	if err != nil {
		return err
	}

	*o = MuteUsersRequest(varMuteUsersRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "audio")
		delete(additionalProperties, "mute_all_users")
		delete(additionalProperties, "screenshare")
		delete(additionalProperties, "screenshare_audio")
		delete(additionalProperties, "user_ids")
		delete(additionalProperties, "video")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMuteUsersRequest struct {
	value *MuteUsersRequest
	isSet bool
}

func (v NullableMuteUsersRequest) Get() *MuteUsersRequest {
	return v.value
}

func (v *NullableMuteUsersRequest) Set(val *MuteUsersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMuteUsersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMuteUsersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMuteUsersRequest(val *MuteUsersRequest) *NullableMuteUsersRequest {
	return &NullableMuteUsersRequest{value: val, isSet: true}
}

func (v NullableMuteUsersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMuteUsersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


