/*
Stream API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v100.14.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getstream_video

import (
	"encoding/json"
	"fmt"
)

// checks if the ListDevicesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListDevicesResponse{}

// ListDevicesResponse struct for ListDevicesResponse
type ListDevicesResponse struct {
	// List of devices
	Devices []Device `json:"devices"`
	Duration string `json:"duration"`
	AdditionalProperties map[string]interface{}
}

type _ListDevicesResponse ListDevicesResponse

// NewListDevicesResponse instantiates a new ListDevicesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListDevicesResponse(devices []Device, duration string) *ListDevicesResponse {
	this := ListDevicesResponse{}
	this.Devices = devices
	this.Duration = duration
	return &this
}

// NewListDevicesResponseWithDefaults instantiates a new ListDevicesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListDevicesResponseWithDefaults() *ListDevicesResponse {
	this := ListDevicesResponse{}
	return &this
}

// GetDevices returns the Devices field value
func (o *ListDevicesResponse) GetDevices() []Device {
	if o == nil {
		var ret []Device
		return ret
	}

	return o.Devices
}

// GetDevicesOk returns a tuple with the Devices field value
// and a boolean to check if the value has been set.
func (o *ListDevicesResponse) GetDevicesOk() ([]Device, bool) {
	if o == nil {
		return nil, false
	}
	return o.Devices, true
}

// SetDevices sets field value
func (o *ListDevicesResponse) SetDevices(v []Device) {
	o.Devices = v
}

// GetDuration returns the Duration field value
func (o *ListDevicesResponse) GetDuration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *ListDevicesResponse) GetDurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *ListDevicesResponse) SetDuration(v string) {
	o.Duration = v
}

func (o ListDevicesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListDevicesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["devices"] = o.Devices
	toSerialize["duration"] = o.Duration

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListDevicesResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"devices",
		"duration",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListDevicesResponse := _ListDevicesResponse{}

	err = json.Unmarshal(data, &varListDevicesResponse)

	if err != nil {
		return err
	}

	*o = ListDevicesResponse(varListDevicesResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "devices")
		delete(additionalProperties, "duration")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListDevicesResponse struct {
	value *ListDevicesResponse
	isSet bool
}

func (v NullableListDevicesResponse) Get() *ListDevicesResponse {
	return v.value
}

func (v *NullableListDevicesResponse) Set(val *ListDevicesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListDevicesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListDevicesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDevicesResponse(val *ListDevicesResponse) *NullableListDevicesResponse {
	return &NullableListDevicesResponse{value: val, isSet: true}
}

func (v NullableListDevicesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDevicesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


