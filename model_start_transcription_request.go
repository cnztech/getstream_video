/*
Stream API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v100.14.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package getstream_video

import (
	"encoding/json"
)

// checks if the StartTranscriptionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StartTranscriptionRequest{}

// StartTranscriptionRequest struct for StartTranscriptionRequest
type StartTranscriptionRequest struct {
	TranscriptionExternalStorage *string `json:"transcription_external_storage,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _StartTranscriptionRequest StartTranscriptionRequest

// NewStartTranscriptionRequest instantiates a new StartTranscriptionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStartTranscriptionRequest() *StartTranscriptionRequest {
	this := StartTranscriptionRequest{}
	return &this
}

// NewStartTranscriptionRequestWithDefaults instantiates a new StartTranscriptionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStartTranscriptionRequestWithDefaults() *StartTranscriptionRequest {
	this := StartTranscriptionRequest{}
	return &this
}

// GetTranscriptionExternalStorage returns the TranscriptionExternalStorage field value if set, zero value otherwise.
func (o *StartTranscriptionRequest) GetTranscriptionExternalStorage() string {
	if o == nil || IsNil(o.TranscriptionExternalStorage) {
		var ret string
		return ret
	}
	return *o.TranscriptionExternalStorage
}

// GetTranscriptionExternalStorageOk returns a tuple with the TranscriptionExternalStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartTranscriptionRequest) GetTranscriptionExternalStorageOk() (*string, bool) {
	if o == nil || IsNil(o.TranscriptionExternalStorage) {
		return nil, false
	}
	return o.TranscriptionExternalStorage, true
}

// HasTranscriptionExternalStorage returns a boolean if a field has been set.
func (o *StartTranscriptionRequest) HasTranscriptionExternalStorage() bool {
	if o != nil && !IsNil(o.TranscriptionExternalStorage) {
		return true
	}

	return false
}

// SetTranscriptionExternalStorage gets a reference to the given string and assigns it to the TranscriptionExternalStorage field.
func (o *StartTranscriptionRequest) SetTranscriptionExternalStorage(v string) {
	o.TranscriptionExternalStorage = &v
}

func (o StartTranscriptionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StartTranscriptionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TranscriptionExternalStorage) {
		toSerialize["transcription_external_storage"] = o.TranscriptionExternalStorage
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *StartTranscriptionRequest) UnmarshalJSON(data []byte) (err error) {
	varStartTranscriptionRequest := _StartTranscriptionRequest{}

	err = json.Unmarshal(data, &varStartTranscriptionRequest)

	if err != nil {
		return err
	}

	*o = StartTranscriptionRequest(varStartTranscriptionRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "transcription_external_storage")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableStartTranscriptionRequest struct {
	value *StartTranscriptionRequest
	isSet bool
}

func (v NullableStartTranscriptionRequest) Get() *StartTranscriptionRequest {
	return v.value
}

func (v *NullableStartTranscriptionRequest) Set(val *StartTranscriptionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableStartTranscriptionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableStartTranscriptionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStartTranscriptionRequest(val *StartTranscriptionRequest) *NullableStartTranscriptionRequest {
	return &NullableStartTranscriptionRequest{value: val, isSet: true}
}

func (v NullableStartTranscriptionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStartTranscriptionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


